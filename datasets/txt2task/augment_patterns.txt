0 @ {}, {}
=
=
DESC0. Then DESC1. Then DESC2
DESC0. Then DESC1. Finally DESC2
DESC0. After that DESC1. Finally DESC2
DESC0. After that: DESC1. Finally: DESC2
First DESC0. Second DESC1. Third DESC2
=
(SRC0) > (SRC1) > (SRC2)
=
concat_concat

0 @ {}, {}
=
=
Either DESC0, or DESC1. Finally, DESC2
Either DESC0. Or, DESC1. Lastly DESC2
DESC0, then DESC2. Or DESC1, then DESC2
DESC0, or, DESC1. But then DESC2
=
((SRC0) | (SRC1)) > SRC2
(SRC0) > (SRC2) | (SRC1) > (SRC2)
=
disjunct_concat

0 @ {}, {}
=
=
First DESC2. Then DESC0, or DESC1
DESC2. Then either DESC0, or DESC1
DESC2, then DESC0. Or DESC2, then DESC1
DESC0, or, DESC1. But before, DESC2
=
SRC2 > ((SRC0) | (SRC1))
(SRC2) > (SRC0) | (SRC2) > (SRC1)
=
concat_disjunct

0 @ {}, {}
=
=
DESC0. Then DESC1
DESC0. Finally, DESC1
First: DESC0. Second: DESC1
First DESC0. Second DESC1
DESC0. After that: DESC1
DESC1, but before that DESC0
=
(SRC0) > (SRC1)
=
concat

0 @ {}, {}
=
=
Either DESC0, or DESC1
Either DESC0. Or, DESC1
DESC0, then DESC1. Or DESC1, then DESC0.
Choose: DESC0, or, DESC1
=
(SRC0) | (SRC1)
=
disjunct

0 @ {}, {}
=
=
There are two tasks and you must do both at the same time. DESC0 (first task), and DESC1 (second task).
DESC0. And at the same time, DESC1.
DESC0. And, DESC1
=
((SRC0)ADD0) & ((SRC1)ADD1)
=
conjunct

0 @ {}, {}
=
$Z % NO_THE
=
Avoid $Z. DESC0
Do the following task, but avoid $Z: DESC0
DESC0. Avoid $Z
DESC0, and avoid $Z
DESC0. Don't get near $Z
=
(SRC0) & (!$Z)*
(SRC0) & ((.)* > $Z > (.)*)~
=
avoid

0 @ {}, {}
=
$Z % AVOID
=
Avoid the $Z. DESC0
Do the following task, but avoid the $Z: DESC0
DESC0. Avoid the $Z
DESC0, and avoid the $Z
DESC0. Don't get near the $Zs
=
(SRC0) & (!$Z)*
(SRC0) & ((.)* > $Z > (.)*)~
=
avoid

0 @ {}, {}
=
$Z % OBJECT_A
=
Avoid $Zs. DESC0
Do the following task, but avoid $Zs: DESC0
DESC0. Avoid $Zs
DESC0, and avoid $Zs
DESC0. Don't get near $Zs
=
(SRC0) & (!$Z)*
(SRC0) & ((.)* > $Z > (.)*)~
=
avoid

0 @ {}, {}
=
$Z % STEP_ON_A
=
Don't step on $Zs. DESC0
Do the following task, but don't step on $Zs: DESC0
DESC0, and never step on $Zs
DESC0. Don't step on $Zs
=
(SRC0) & (!$Z)*
(SRC0) & ((.)* > $Z > (.)*)~
=
avoid

0 @ {}, {}
=
$Z % FALL_IN_A
=
Don't fall in a $Z. DESC0
Do the following task, but don't fall in a $Z: DESC0
DESC0, and never fall in a $Z
DESC0. Don't fall in a $Z
=
(SRC0) & (!$Z)*
(SRC0) & ((.)* > $Z > (.)*)~
=
avoid

0 @ {}, {}
=
$Z % HIT_A
=
Don't hit a $Z. DESC0
Do the following task, but don't hit a $Z: DESC0
DESC0, and never hit a $Z
DESC0. Don't hit a $Z.
=
(SRC0) & (!$Z)*
(SRC0) & ((.)* > $Z > (.)*)~
=
avoid

0 @ {}, {}
=
$Z % NO_THE
=
Avoid $Z. DESC0, then DESC1
DESC0. Then, DESC1. Avoid $Z
Don't get near $Z: DESC0, then DESC1
DESC0. Then DESC1. Avoid $Z
DESC0. Then, DESC1. Don't approach $Z
=
((SRC0) > (SRC1)) & (!$Z)*
((SRC0) > (SRC1)) & ((.)* > $Z > (.)*)~
=
concat_avoid

0 @ {}, {}
=
$Z % AVOID
=
Avoid the $Z. DESC0, then DESC1
DESC0. Then, DESC1. Avoid the $Z
Don't get near the $Z: DESC0, then DESC1
DESC0. Then DESC1. Avoid the $Z
DESC0. Then, DESC1. Don't approach the $Z
=
((SRC0) > (SRC1)) & (!$Z)*
((SRC0) > (SRC1)) & ((.)* > $Z > (.)*)~
=
concat_avoid

0 @ {}, {}
=
$Z % OBJECT_A
=
Avoid $Zs. DESC0, then DESC1
DESC0. Then, DESC1. Avoid $Zs
Don't get near $Zs: DESC0, then DESC1
DESC0. Then DESC1. Avoid $Zs
DESC0. Then, DESC1. Don't approach $Zs
=
((SRC0) > (SRC1)) & (!$Z)*
((SRC0) > (SRC1)) & ((.)* > $Z > (.)*)~
=
concat_avoid
