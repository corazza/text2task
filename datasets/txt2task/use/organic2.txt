0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
2 @ {}, {'$A'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
3 @ {}, {'$A'}, {'$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
6 @ {}, {'$A'}, {'$B'}, {'$B'}, {}, {}, {}, {}, {'$A'}, {}, {'$B'}, {'$A'}, {}, {}
=
$A % COLOR, $B % COLOR
=
Collect all $A or $B objects in the room
Collect every $A object and every $B object
Collect every $A or $B object
=
((.)* > ($A | $B))+

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {'$A'}, {'$B'}, {'$C'}, {}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {}, {}, {}, {}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {}, {}, {}, {}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {}, {}, {}
0 @ {}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {'$B'}, {'$C'}, {}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {}, {}, {}, {}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {}, {}, {}, {}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {}, {}, {}
=
$A % NONDIRECTION, $B % NONDIRECTION, $C % NONDIRECTION
=
Repeat a pattern of $A, $B, $C three times
$A, $B, then $C. Repeat three times.
$A, $B, then $C (repeat three times)
=
($A > $B > $C) > ($A > $B > $C) > ($A > $B > $C)
=
Repeat a pattern of $A, $B, $C three times

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {'$A'}, {'$B'}, {'$C'}, {}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {}, {}, {}, {}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {}, {}, {}, {}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {}, {}, {}
0 @ {}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {'$B'}, {'$C'}, {}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {}, {}, {}, {}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {}, {}, {}, {}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {}, {}, {}
=
$A % DIRECTION, $B % DIRECTION, $C % DIRECTION
=
Repeat a pattern of going $A, going $B, and going $C three times
Go $A, go $B, then go $C (repeat three times)
Go $A, go $B, then go $C. Repeat three times.
=
($A > $B > $C) > ($A > $B > $C) > ($A > $B > $C)
=
Repeat a pattern of $A, $B, $C three times

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'key'}, {}, {'door'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'key'}, {}, {'door'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'key'}, {}, {'door'}, {'$A'}, {'door'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'key'}, {}, {'door'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}
1 @ {}, {'key'}, {}, {'door'}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}
1 @ {}, {'key'}, {}, {'door'}, {'$A'}, {}, {}, {'key'}, {}, {'door'}, {'$A'}, {}, {}, {'key'}, {}, {'door'}, {'$A'}, {}
0 @ {}, {'door'}, {}, {'key'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'door'}, {}, {'key'}, {}, {'door'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'key'}, {}, {'door'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'key'}, {'key'}, {'door'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}
=
$A % PLACE
$A % AREA
=
Find the key, open the door, and enter the $A
First, find the key. Then, open the door to the $A and enter it.
You have to enter the $A, but to do that you will have to find the key and use it to open the doors to the $A
=
(!key)* > key > (!door)* > door > $A

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'key'}, {}, {'door'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'key'}, {}, {'door'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'key'}, {}, {'door'}, {'$A'}, {'door'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'key'}, {}, {'door'}, {}, {'$A'}, {'door'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'key'}, {}, {'door'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}
1 @ {}, {'key'}, {}, {'door'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}
1 @ {}, {'key'}, {}, {'door'}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}
1 @ {}, {'key'}, {}, {'door'}, {}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}
1 @ {}, {'key'}, {}, {'door'}, {'$A'}, {}, {}, {'key'}, {}, {'door'}, {'$A'}, {}, {}, {'key'}, {}, {'door'}, {'$A'}, {}
1 @ {}, {'key'}, {}, {'door'}, {}, {'$A'}, {}, {}, {'key'}, {}, {'door'}, {}, {'$A'}, {}, {}, {'key'}, {}, {'door'}, {}, {'$A'}, {}
0 @ {}, {'door'}, {}, {'key'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'door'}, {}, {'key'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'door'}, {}, {'key'}, {}, {'door'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'door'}, {}, {'key'}, {}, {'door'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'key'}, {}, {'door'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'key'}, {'key'}, {'door'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'key'}, {'key'}, {'door'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}
=
$A % PLACE
$A % AREA
=
Find the key and then open the door. Afterwards, enter the $A somewhere else unrelated to the door.
First, find the key. Then, open the door. And finally find the $A elsewhere and enter it.
You have to enter the $A, but to do that you will have to find the key and use it to open the doors to the $A.
=
(!key)* > key > (!door)* > door > (!$A)* > $A

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$B'}, {'$B'}, {'target'}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$B'}, {}, {'$B'}, {'$B'}, {'target'}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {'target'}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {'target'}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {'target'}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {'target'}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {'target'}
0 @ {}, {'$A'}, {}, {'$B'}, {'$B'}, {'target'}, {'$A'}, {'target'}, {}, {}, {}, {}
1 @ {'$A'}, {'$B'}, {'$B'}, {'target'}, {}, {}, {}, {}, {}, {}
1 @ {'$B'}, {'$B'}, {'$B'}, {'target'}, {}, {}, {}, {}, {}, {}
1 @ {'$A'}, {'$A'}, {'$A'}, {'target'}, {}, {}, {}, {}, {}, {}
1 @ {'$A'}, {'$A'}, {'$A'}, {'target'}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {'target'}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {'target'}, {}, {}, {}, {}, {}, {}
0 @ {'$A'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}
0 @ {'$A'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {'target'}
1 @ {'$A'}, {'$B'}, {'$B'}, {'target'}, {'$A'}, {'target'}, {}, {}, {}, {}
1 @ {'$A'}, {'$B'}, {'$B'}, {'target'}, {'$A'}, {'$B'}, {'$B'}, {'target'}, {'$A'}, {'$B'}, {'$B'}, {'target'}
=
$A % DIRECTION, $B % DIRECTION
=
Go $A or $B until facing the target
You can only ever go $A or $B. Do that until you're facing the target.
=
(($A|$B)&!target)* > target
=
Go $A or $B until facing the target

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$B'}, {'$B'}, {'$C'}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$B'}, {}, {'$B'}, {'$B'}, {'$C'}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$C'}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$C'}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {'$C'}
0 @ {}, {'$A'}, {}, {'$B'}, {'$B'}, {'$C'}, {'$A'}, {'$C'}, {}, {}, {}, {}
1 @ {'$A'}, {'$B'}, {'$B'}, {'$C'}, {}, {}, {}, {}, {}, {}
1 @ {'$B'}, {'$B'}, {'$B'}, {'$C'}, {}, {}, {}, {}, {}, {}
1 @ {'$A'}, {'$A'}, {'$A'}, {'$C'}, {}, {}, {}, {}, {}, {}
1 @ {'$A'}, {'$A'}, {'$A'}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$C'}, {}, {}, {}, {}, {}, {}
0 @ {'$A'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}
0 @ {'$A'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {'$C'}
1 @ {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$A'}, {'$C'}, {}, {}, {}, {}
1 @ {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$B'}, {'$C'}
=
$A % DIRECTION, $B % DIRECTION, $C % PLACE
$A % DIRECTION, $B % DIRECTION, $C % AREA
=
Go $A or $B until you get to the $C
You can only ever go $A or $B. Do that until you get to the $C.
Get to the $C by going only $A or $B
=
(($A|$B)&!$C)* > $C
=
Go $A or $B until facing the target

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$C'}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$C'}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$C'}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$C'}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {'$C'}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$C'}, {'$A'}, {'$C'}, {}, {}, {}, {}
1 @ {'$A'}, {'$A'}, {'$A'}, {'$C'}, {}, {}, {}, {}, {}, {}
1 @ {'$A'}, {'$A'}, {'$A'}, {'$C'}, {'$D'}, {}, {}, {}, {}, {}
1 @ {'$A'}, {'$A'}, {'$A'}, {'$D'}, {'$C'}, {}, {}, {}, {}, {}, {}
1 @ {'$A'}, {'$A'}, {'$A'}, {'$C'}, {}, {}, {}, {}, {}, {}
1 @ {'$A'}, {'$A'}, {'$A'}, {'$C'}, {'$C'}, {}, {}, {}, {}, {}
1 @ {'$A'}, {'$A'}, {'$A'}, {'$D'}, {'$D'}, {}, {}, {}, {}, {}
1 @ {'$A'}, {'$A'}, {'$A'}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$D'}, {}, {}, {}, {}, {}, {}
0 @ {'$A'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}
0 @ {'$A'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {'$C'}
1 @ {'$A'}, {'$A'}, {'$A'}, {'$C'}, {'$A'}, {'$C'}, {}, {}, {}, {}
1 @ {'$A'}, {'$A'}, {'$A'}, {'$C'}, {'$A'}, {'$A'}, {'$A'}, {'$C'}, {'$A'}, {'$A'}, {'$A'}, {'$C'}
0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$D'}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$D'}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$D'}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$D'}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {'$D'}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$D'}, {'$A'}, {'$D'}, {}, {}, {}, {}
1 @ {'$A'}, {'$A'}, {'$A'}, {'$D'}, {}, {}, {}, {}, {}, {}
1 @ {'$A'}, {'$A'}, {'$A'}, {'$D'}, {}, {}, {}, {}, {}, {}
1 @ {'$A'}, {'$A'}, {'$A'}, {'$D'}, {}, {}, {}, {}, {}, {}
1 @ {'$A'}, {'$A'}, {'$A'}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$D'}, {}, {}, {}, {}, {}, {}
0 @ {'$A'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}
0 @ {'$A'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {'$D'}
1 @ {'$A'}, {'$A'}, {'$A'}, {'$D'}, {'$A'}, {'$D'}, {}, {}, {}, {}
1 @ {'$A'}, {'$A'}, {'$A'}, {'$D'}, {'$A'}, {'$A'}, {'$A'}, {'$D'}, {'$A'}, {'$A'}, {'$A'}, {'$D'}
=
$A % DIRECTION, $C % PLACE, $D % PLACE
$A % DIRECTION, $C % PLACE, $D % AREA
$A % DIRECTION, $C % AREA, $D % PLACE
$A % DIRECTION, $C % AREA, $D % AREA
=
Move $A until reaching a $C or a $D
Go $A until you get to the $C or $D
You can only ever go $A. Do that until you get to the $C or the $D.
Get to the $C or the $D by going only $A.
=
($A&!$C&!$D)* > ($C|$D)

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
2 @ {}, {}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
3 @ {}, {}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}
4 @ {'$A'}, {}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}
3 @ {'$A'}, {'$A'}, {'$A'}
=
$A % COLLECTABLE
=
Pick up all the $As on the path
Collect all the $As
Get all the $As
Get as many $As as possible
=
((!$A)* > $A)+

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
2 @ {}, {}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
3 @ {}, {}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}
4 @ {'$A'}, {}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}
3 @ {'$A'}, {'$A'}, {'$A'}
1 @ {}, {}, {'$A'}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$B'}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {}, {'$A', '$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}
2 @ {'$A'}, {}, {'$A'}, {'$B'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}
3 @ {'$A'}, {'$A'}, {'$A'}, {'$B'}
=
$A % COLLECTABLE, $B % AVOID
=
Pick up all the $As on the path while avoiding $Bs
Collect all the $As and avoid all $Bs
Get all the $As, and avoid $Bs
Get as many $As as possible (avoid $Bs)
=
((.)* > $A)+ & (!$B)*
((.)* > $A)+ & ((.)* > $B > (.)*)~
((!$B)* > $A&!$B)+
=
Pick up all the $As on the path while avoiding $Bs

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
2 @ {}, {}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
3 @ {}, {}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}
4 @ {'$A'}, {}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}
3 @ {'$A'}, {'$A'}, {'$A'}
1 @ {}, {}, {'$A'}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$B'}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {}, {'$A', '$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}
2 @ {'$A'}, {}, {'$A'}, {'$B'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}
3 @ {'$A'}, {'$A'}, {'$A'}, {'$B'}
=
$A % COLLECTABLE, $B % STEP_ON_A
=
Pick up all the $As on the path while not stepping on $Bs
Collect all the $As and never step on any $Bs
Get all the $As, and don't step on a $B
Get as many $As as possible (don't step on $Bs)
=
((.)* > $A)+ & (!$B)*
((.)* > $A)+ & ((.)* > $B > (.)*)~
((!$B)* > $A&!$B)+
=
Pick up all the $As on the path while avoiding $Bs

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
2 @ {}, {}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
3 @ {}, {}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}
4 @ {'$A'}, {}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}
3 @ {'$A'}, {'$A'}, {'$A'}
1 @ {}, {}, {'$A'}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$B'}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {}, {'$A', '$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}
2 @ {'$A'}, {}, {'$A'}, {'$B'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}
3 @ {'$A'}, {'$A'}, {'$A'}, {'$B'}
=
$A % COLLECTABLE, $B % HIT_A
=
Pick up all the $As on the path while not hitting $Bs
Collect all the $As and never hit any $Bs
Get all the $As, and be careful not to hit a $B
Get as many $As as possible (don't hit a $B)
=
((.)* > $A)+ & (!$B)*
((.)* > $A)+ & ((.)* > $B > (.)*)~
((!$B)* > $A&!$B)+
=
Pick up all the $As on the path while avoiding $Bs

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {}, {'$A', '$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
2 @ {}, {}, {'$A', '$B'}, {}, {'$A', '$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
3 @ {}, {}, {'$A', '$B'}, {}, {'$A', '$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A', '$B'}
4 @ {'$A', '$B'}, {}, {'$A', '$B'}, {}, {'$A', '$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A', '$B'}
3 @ {'$A', '$B'}, {'$A', '$B'}, {'$A', '$B'}
0 @ {}, {}, {'$A', '$C'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {}, {'$A', '$B'}, {}, {'$A', '$C'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
2 @ {}, {}, {'$A', '$C'}, {}, {'$A', '$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A', '$B'}
3 @ {'$A', '$B'}, {}, {'$A', '$B'}, {}, {'$A', '$C'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A', '$B'}
2 @ {'$A', '$C'}, {'$A', '$B'}, {'$A', '$B'}
0 @ {}, {}, {'$A', '$C'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {}, {'$A', '$C'}, {}, {'$A', '$C'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {}, {'$A', '$C'}, {}, {'$A', '$C'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A', '$C'}
0 @ {'$A', '$C'}, {}, {'$A', '$C'}, {}, {'$A', '$C'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A', '$C'}
0 @ {'$A', '$C'}, {'$A', '$C'}, {'$A', '$C'}
=
$A % COLLECTABLE, $B % COLOR, $C % COLOR
=
Pick up all the $B $As on the path
Collect all the $B $As
Get all the $B $As
Get as many $B $As as possible
=
((.)* > $A&$B)+
