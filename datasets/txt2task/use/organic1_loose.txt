0 @ {}, {}, {}, {}
1 @ {'$A'}, {'$B'}, {'$C'}
1 @ {'$A'}, {'$B'}, {'$C'}, {'$C'}
1 @ {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}
1 @ {'$A'}, {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}
1 @ {'$A'}, {'$B'}, {'$C'}, {'$B'}, {'$C'}
2 @ {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}
2 @ {'$A'}, {'$B'}, {'$C'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}
1 @ {}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, 
2 @ {}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {}
0 @ {}, {}, {'$B'}, {}, {'$B'}, {}, {'$C'}, {}, 
0 @ {}, {}, {'$B'}, {}, {'$B'}, {}, {'$B'}, {}, 
0 @ {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, 
0 @ {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {'$C'}, {'$B'}, {}
1 @ {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {'$C'}, {'$B'}, {'$C'}
1 @ {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {'$C'}
=
$A % PLACE, $B % PLACE, $C % PLACE
=
Patrol the $A, $B, and $C respectively
Patrol the $A, $B, and $C in that order
Circle the $A, $B, and $C (necessarily in that order)
=
((!$A)* > $A > (!$B)* > $B > (!$C)* > $C)+

0 @ {}, {}, {}, {}
1 @ {'$S'}, {'$A'}, {'$B'}, {'$C'}, {'$F'}
1 @ {'$S'}, {'$A'}, {'$B'}, {'$C'}, {'$F'}, {'$F'}
1 @ {'$S'}, {'$A'}, {'$B'}, {'$C'}, {'$C'}, {'$F'}, {'$F'}
1 @ {'$S'}, {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}, {'$F'}, {'$F'}
1 @ {'$S'}, {'$A'}, {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}, {'$F'}, {'$F'}
1 @ {'$S'}, {'$A'}, {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}, {'$F'}, {'$F'}
1 @ {'$S'}, {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}, {'$F'}, {'$F'}
1 @ {'$S'}, {'$A'}, {'$B'}, {'$C'}, {'$C'}, {'$F'}, {'$F'}
1 @ {'$S'}, {'$A'}, {'$B'}, {'$C'}, {'$F'}, {'$F'}
1 @ {'$S'}, {'$A'}, {'$B'}, {'$C'}, {'$F'}, {'$S'}, {'$A'}, {'$B'}, {'$C'}, {'$F'}
1 @ {}, {'$S'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$F'}
1 @ {}, {'$S'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$F'}, {}, {}, {'$S'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$F'}, {}
0 @ {}, {'$S'}, {}, {'$B'}, {}, {'$B'}, {}, {'$C'}, {}, {'$F'}
0 @ {}, {'$S'}, {}, {'$B'}, {}, {'$B'}, {}, {'$B'}, {}, {'$F'}
0 @ {}, {'$S'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$F'}
0 @ {}, {'$S'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {'$C'}, {'$B'}, {}, {'$F'}
1 @ {}, {'$S'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {'$C'}, {'$B'}, {'$C'}, {'$F'}
1 @ {}, {'$S'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {'$C'}, {'$F'}
=
$S % PLACE, $A % PLACE, $B % PLACE, $C % PLACE, $F % PLACE
=
Start from the $S, then patrol the $A, $B, and $C respectively. End at the $F
Starting from the $S, patrol the $A, $B, and $C in that order. End at the $F
Starting from the $S, circle the $A, $B, and $C (necessarily in that order), then finish at the $F
Start at $S and end at $F. In between patrol the $A, the $B, and the $C
Patrol the $A, $B, and the $C, but start at $S and end at $F
Find the $S and then patrol the $A, $B and the $C, then go to the $F
=
(!$S)* > $S > ((!$S&!$A)* > $A > (!$B)* > $B > (!$C)* > $C)+ > (!$F)* > $F

0 @ {}
1 @ {}, {}, {'$A'}
1 @ {'$A'}
2 @ {'$A'}, {'$A'}
0 @ {}, {}, {}
=
$A % DIRECTION
=
Go $A at least once
Do anything but go $A at least once
Your task is to go $A at least once
=
(.)* > $A

0 @ {}
0 @ {}, {}, {'$A'}
0 @ {'$A'}
1 @ {'$A'}, {'$A'}
0 @ {}, {}, {}
1 @ {}, {}, {'$A'}, {}, {}, {'$A'}
=
$A % DIRECTION
=
Go $A at least twice
Do anything but go $A at least twice
Your task is to go $A at least twice
=
(.)* > $A > (.)* > $A

0 @ {}
1 @ {}, {}, {'$A'}
1 @ {'$A'}
2 @ {'$A'}, {'$A'}
0 @ {}, {}, {}
=
$A % PLACE
=
Get to the $A
Go to the $A
Visit the $A
Find the $A
You have to go to the $A
=
(.)* > $A

0 @ {}
1 @ {}, {}, {'$A'}
1 @ {'$A'}
2 @ {'$A'}, {'$A'}
0 @ {}, {}, {}
=
$A % NO_THE
=
Find $A
Get $A
You have to find $A
=
(.)* > $A
=
Find $A

0 @ {}
1 @ {}, {}, {'$A'}
1 @ {'$A'}
2 @ {'$A'}, {'$A'}
0 @ {}, {}, {}
=
$A % COLLECTABLE
=
Find $As
Get $As
You have to find $As
=
((.)* > $A)+
=
Find $A

0 @ {}
1 @ {}, {}, {'$A'}
1 @ {'$A'}
2 @ {'$A'}, {'$A'}
0 @ {}, {}, {}
=
$A % OBJECT_A
=
Find a $A
Get a $A
You have to find a $A
=
(.)* > $A
=
Find $A

0 @ {}, {}, {}
1 @ {'$A'}, {'$B'}, {'$C'}
1 @ {'$A'}, {'$B'}, {'$C'}, {'$C'}
1 @ {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}
1 @ {'$A'}, {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}
1 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}
1 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {'$C'}
0 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}
0 @ {}, {'$C'}, {}, {'$A'}, {}, {'$B'}
1 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}
=
$A % PLACE, $B % PLACE, $C % PLACE
=
Visit the $A, $B, and $C in that order
First go to the $A. Then go to the $B. Finally, go to the $C.
Visit in order: $A, $B, $C
Visit in reverse order: $C, $B, $A
Go to the $A, then the $B, then the $C
=
(.)* > $A > (.)* > $B > (.)* > $C


0 @ {}, {}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}
0 @ {}, {'$B'}, {}, {'$C'}
0 @ {}, {'$A'}, {}, {}, {'$C'}
0 @ {}, {'$A'}, {}, {'$B'}, {}
1 @ {}, {'$A'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}
1 @ {}, {'$A'}, {}, {'$A'}, {}, {'$B'}, {}, {'$B'}, {}, {'$C'}
1 @ {}, {'$A'}, {}, {'$A'}, {}, {'$B'}, {}, {'$B'}, {}, {'$C'}, {}, {'$C'}, {}
1 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}
1 @ {}, {'$C'}, {}, {'$A'}, {}, {'$B'}
1 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}
1 @ {}, {}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}
0 @ {'$C'}, {'$B'}, {'$A'}
0 @ {}, {'$C'}, {}, {'$B'}, {}, {'$A'}
0 @ {}, {'$C'}, {'$C'}, {}, {'$B'}, {'$B'}, {}, {'$A'}, {'$A'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}
=
$A % PLACE, $B % PLACE, $C % PLACE
=
Visit the $A, the $B, and the $C. Start from any of them, but respect that order
Go to the $A, the $B, and the $C (start from any of them but respect that order)
Visit in order: $A, $B, $C. But, you can choose either of the three as a starting place
Go to (in order): $A, $B, $C (but, you can choose either of the three as a starting place)
=
(.)* > $A > (.)* > $B > (.)* > $C | (.)* > $B > (.)* > $C > (.)* > $A | (.)* > $C > (.)* > $A > (.)* > $B

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
3 @ {}, {'$A'}, {}, {'$B'}, {}, {}, {'$C'}, {}, {}, {}, {}, {}
1 @ {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}
1 @ {}, {}, {}, {}, {}, {'$C'}, {}, {}, {}, {}, {}, {}
5 @ {'$A'}, {'$A'}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}
6 @ {'$A'}, {'$A'}, {'$A'}, {'$C'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}
=
$A % OBJECT, $B % OBJECT, $C % PLACE
=
get the $A or the $B or go to the $C, repeat
Either go to the $C, or collect the $A or the $B, repeatedly
You have three options to repeat: go to the $C, find the $A, or find the $B
=
((.)* > ($A | $B | $C))+
=
get the $A or the $B or go to the $C, repeat

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$B'}, {}, {}, {'$C'}, {}, {}, {}, {}, {}
0 @ {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}
0 @ {}, {}, {}, {}, {}, {'$C'}, {}, {}, {}, {}, {}, {}
0 @ {'$A'}, {'$A'}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}
0 @ {'$A'}, {'$A'}, {'$A'}, {'$C'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {}, {}, {'$C'}, {}, {}, {}, {}, {'$F'}
1 @ {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$F'}
1 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {'$F'}
1 @ {}, {}, {}, {}, {}, {'$C'}, {}, {}, {}, {}, {}, {}, {'$F'}
1 @ {'$A'}, {'$A'}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {'$F'}
1 @ {'$A'}, {'$A'}, {'$A'}, {'$C'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {'$F'}
=
$A % OBJECT, $B % OBJECT, $C % PLACE, $F % PLACE
=
get the $A or the $B or go to the $C, repeat. After doing that, end at the $F
Either go to the $C, or collect the $A or the $B, repeatedly: and then go to the $F
You have three options to repeat: go to the $C, find the $A, or find the $B. Afterwards, visit the $F.
=
((.)* > ($A | $B | $C))+ > (.)* > $F

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
3 @ {}, {'$A'}, {}, {'$B'}, {}, {}, {'$C'}, {}, {}, {}, {}, {}
1 @ {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}
1 @ {}, {}, {}, {}, {}, {'$C'}, {}, {}, {}, {}, {}, {}
5 @ {'$A'}, {'$A'}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}
6 @ {'$A'}, {'$A'}, {'$A'}, {'$C'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}
=
$A % OBJECT, $B % PLACE, $C % PLACE
=
get the $A or go to the $B or the $C, repeat
Either get the $A, or go to the $B or the $C, repeatedly
You have three options to repeat: go to the $C, find the $A, or go to the $B
=
((.)* > ($A | $B | $C))+
=
get the $A or the $B or go to the $C, repeat

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$B'}, {'$B'}, {'$C', '$B'}
0 @ {}, {'$A'}, {}, {'$B'}, {'$B'}, {'$C', '$B'}, {'$B'}, {'$B'}, {}, {'$B'}, {}, {'$C'}, {}, {}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {'$B'}, {'$C', '$B'}, {'$B'}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}
1 @ {}, {'$A', '$B'}, {'$B'}, {'$B'}, {'$B'}, {'$C', '$B'}, {'$B'}, {'$B'}, {'$B'}, {'$A', '$B'}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {'$B'}, {'$C', '$B'}, {'$B', '$C'}, {'$B', '$C'}, {}, {'$A'}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {'$B'}, {'$C', '$B'}, {'$B', '$C'}, {'$B', '$C'}, {'$C'}, {'$A', '$C'}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$B'}, {'$B'}, {'$C'}, {'$B'}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$B'}, {'$B'}, {'$B'}, {'$B'}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}
=
$A % PLACE, $B % AREA, $C % PLACE
=
start from the $A and find the $B. then find the $C in the $B. return to $A
begin and end in the $A. so, starting from the $A, find the $B. and in the $B, find the $C. don't forget to return to $A
start and finish in the $A. so, starting from the $A, find the $B. and in the $B, find the $C
Find the $A. Then, find the $C in the $B. Finally, return to the $A
Find the $A, then find the $C in the $B, then return to the $A
=
(.)* > $A > (.)* > $B&$C > (.)* > $A
(.)* > $A > (.)* > ((.)* > $C > (.)*)&($B)* > (.)* > $A

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$C'}, {}, {'$D'}, {}, {'$A'}, {}, {}, {}, {}
1 @ {}, {'$A'}, {}, {'$C'}, {}, {'$D'}, {}, {'$B'}, {}, {}, {}, {}
1 @ {}, {'$A'}, {}, {'$A'}, {}, {'$C'}, {}, {'$C'}, {}, {'$D'}, {}, {'$D'}, {}, {'$B'}, {}, {'$B'}, {}, {}
1 @ {}, {'$A'}, {}, {'$A'}, {}, {'$C'}, {}, {'$C'}, {}, {'$D'}, {}, {'$D'}, {}, {'$B'}, {}, {'$B'}, {}, {}, {}, {'$A'}, {}, {'$A'}, {}, {'$C'}, {}, {'$C'}, {}, {'$D'}, {}, {'$D'}, {}, {'$B'}, {}, {'$B'}, {}, {}
0 @ {}, {'$A'}, {}, {'$C'}, {}, {'$D'}, {}, {'$C'}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$C'}, {}, {'$D'}, {}, {'$D'}, {}, {}, {}, {}
1 @ {}, {'$A'}, {}, {'$C'}, {}, {'$D'}, {}, {'$B'}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$C'}, {}, {'$D'}, {}, {'$B'}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$C'}, {}, {'$D'}, {}, {'$B'}, {}, {}, {}, {}
1 @ {}, {'$B'}, {}, {'$A'}, {'$C'}, {}, {'$C'}, {'$A'}, {}, {'$D'}, {'$D'}, {'$B'}, {}, {}, {}, {}
=
$A % PLACE, $B % PLACE, $C % OBJECT, $D % OBJECT
=
go to the $A, then get the $C. afterwards run to get the $D, and finally go to the $B
in this order: $A, $C, $D, $B
in reverse order: $B, $D, $C, $A
You have to do four things. First, go to the $A. Second, get the $C. Third, get the $D. And finally go to the $B.
Go to the $A, then find the $C, then find the $D, then go to the $B
=
(.)* > $A > (.)* > $C > (.)* > $D > (.)* > $B

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$B'}, {'$C'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {'$C'}, {}, {'$B'}, {}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$C'}, {'$B'}, {}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
=
$A % PLACE, $B % OBJECT, $C % AVOID
=
get the $B then go to the $A all the while avoding $Cs
before exiting through the $A, grab the $B! avoid $Cs
while avoiding $Cs: collect the $B and get to the $A
(in reverse order) get to the $A (avoid $Cs) then get the $B (also avoid $Cs)
=
(!$C)* > $B&!$C > (!$C)* > $A&!$C
((.)* > $B > (.)* > $A) & (!$C)*
=
before exiting through the $A, grab the $B! avoid $Cs

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$B'}, {'$C'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {'$C'}, {}, {'$B'}, {}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$C'}, {'$B'}, {}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
=
$A % PLACE, $B % OBJECT, $C % STEP_ON_A
=
get the $B then go to the $A all the while avoding stepping on a $C
before exiting through the $A, grab the $B! never step on a $C
without stepping on a $C: collect the $B and get to the $A
(in reverse order) get to the $A (don't step on $Cs) then get the $B (also don't step on $Cs)
=
(!$C)* > $B&!$C > (!$C)* > $A&!$C
((.)* > $B > (.)* > $A) & (!$C)*
=
before exiting through the $A, grab the $B! avoid $Cs

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$B'}, {'$C'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {'$C'}, {}, {'$B'}, {}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$C'}, {'$B'}, {}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
=
$A % PLACE, $B % OBJECT, $C % HIT_A
=
get the $B then go to the $A, but don't hit $Cs
before exiting through the $A, grab the $B! don't hit $Cs
without hitting a $C: collect the $B and get to the $A
(in reverse order) get to the $A (don't hit $Cs) then get the $B (also never hit a $C)
=
(!$C)* > $B&!$C > (!$C)* > $A&!$C
((.)* > $B > (.)* > $A) & (!$C)*
=
before exiting through the $A, grab the $B! avoid $Cs

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$B'}, {}, {}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {'$C'}, {}, {'$B'}, {}, {'$A'}, {}, {}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$C'}, {'$B'}, {}, {'$A'}, {}, {}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
=
$A % PLACE, $B % OBJECT, $C % FALL_IN_A
=
get the $B then go to the $A, but don't fall into a $C
before exiting through the $A, grab the $B! never fall into a $C
without falling into a $C: collect the $B and get to the $A
do the following in reverse order: get to the $A then get the $B. avoid $Cs though
do the following in reverse order: get to the $A then get the $B (don't fall in $Cs though)
=
(!$C)* > $B&!$C > (!$C)* > $A&!$C
((.)* > $B > (.)* > $A) & (!$C)*
=
before exiting through the $A, grab the $B! avoid $Cs

0 @ {}, {}
0 @ {}, {}, {'$A'}, {'$B'}, {}
0 @ {}, {}, {'$A'}, {}, {'$B'}, {'$A'}, {'$B'}, {}
0 @ {}, {}, {'$A'}, {'$B'}, {}
1 @ {}, {}, {'$A'}, {}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$B'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}
2 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B'}, {'$B', '$A'}, 
2 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
2 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$B', '$A'}
1 @ {}, {'$B'}, {}, {'$A'}, {'$B', '$A'}
1 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}
2 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B'}, {'$B', '$A'}, 
2 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
2 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$B', '$A'}
=
$A % AREA, $B % COLLECTABLE
=
Go to the $A and gather $Bs
We need $Bs from the $A
Once you get to the $A gather $Bs
Find $Bs in the $A
=
(.)* > (($A)* > $B&$A)+
(.)* > (((.)* > $B)+ & ($A)*)
((.)* > ($B&$A))+

0 @ {}, {}
0 @ {}, {}, {'$A'}, {'$B'}, {}
0 @ {}, {}, {'$A'}, {}, {'$B'}, {'$A'}, {'$B'}, {}
0 @ {}, {}, {'$A'}, {'$B'}, {}
0 @ {}, {}, {'$A'}, {}, {'$B', '$A'}
0 @ {}, {}, {'$A'}, {'$B'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B'}, {'$B', '$A'}, 
2 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
2 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$B', '$A'}
1 @ {}, {'$B'}, {}, {'$A'}, {'$B', '$A'}
1 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}
1 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B'}, {'$B', '$A'}, 
2 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
2 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$B', '$A'}
=
$A % AREA, $B % COLLECTABLE
=
Go to the $A and gather $Bs, but don't leave the $A once you get there
Once you get to the $A don't leave it and gather $Bs
Find the $A and don't leave it. Inside the $A get $Bs
=
(!$A)* > (($A)* > $B&$A)+
(!$A)* > (((.)* > $B)+ & ($A)*)

0 @ {}, {}
0 @ {}, {}, {'$A'}, {'$B'}, {}
0 @ {}, {}, {'$A'}, {}, {'$B'}, {'$A'}, {'$B'}, {}
0 @ {}, {}, {'$A'}, {'$B'}, {}
1 @ {}, {}, {'$A'}, {}, {'$B', '$A'}
0 @ {}, {}, {'$A'}, {'$B'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B'}, {'$B', '$A'}, 
2 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
2 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$B', '$A'}
0 @ {}, {'$B'}, {}, {'$A'}, {'$B', '$A'}
0 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}
0 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B'}, {'$B', '$A'}, 
0 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
0 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$B', '$A'}
=
$A % AREA, $B % COLLECTABLE
=
Go to the $A and find $Bs, but avoid $Bs before getting to the $A
Go to the $A and avoid any $Bs on the way there. In the $A, find $Bs
Get to the $A and avoid any $Bs on the way there, and find $Bs in the $A
There are many $Bs in the $A. Go and find them, but on the way to the $A avoid the $Bs
=
(!$B)* > (($A)* > $B&$A)+
(!$B)* > (((.)* > $B)+ & ($A)*)

0 @ {}, {}
0 @ {}, {}, {'$A'}, {'$B'}, {}
0 @ {}, {}, {'$A'}, {}, {'$B'}, {'$A'}, {'$B'}, {}
0 @ {}, {}, {'$A'}, {'$B'}, {}
0 @ {}, {}, {'$A'}, {}, {'$B', '$A'}
0 @ {}, {}, {'$A'}, {'$B'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B'}, {'$B', '$A'}, 
2 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
2 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$B', '$A'}
0 @ {}, {'$B'}, {}, {'$A'}, {'$B', '$A'}
0 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}
0 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B'}, {'$B', '$A'}, 
0 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
0 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$B', '$A'}
=
$A % AREA, $B % COLLECTABLE
=
Go to the $A and find $Bs, but avoid $Bs before getting to the $A, and never leave the $A once you get there
Go to the $A and avoid any $Bs on the way there. In the $A, find $Bs without leaving the $A
Get to the $A and avoid any $Bs on the way there, and while never leaving the $A find $Bs there
There are many $Bs in the $A. Go and find them, but on the way to the $A avoid the $Bs, and once you get there don't leave
=
(!$B&!$A)* > (($A)* > $B&$A)+
(!$B&!$A)* > (((.)* > $B)+ & ($A)*)

0 @ {}, {}, {}
0 @ {}, {}, {}, {'$B'}, {'$B'}, {}, {'$A'}
0 @ {}, {}, {}, {'$C'}, {'$C'}, {}, {'$A'}
1 @ {}, {}, {}, {'$B'}, {'$C'}, {}, {'$A'}
1 @ {}, {}, {}, {'$C'}, {'$B'}, {}, {'$A'}
1 @ {}, {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}
1 @ {}, {}, {}, {'$B'}, {'$B'}, {'$C'}, {'$C'}, {'$A'}, {'$A'}
1 @ {}, {}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}
1 @ {}, {}, {}, {'$C'}, {'$C'}, {'$B'}, {'$B'}, {'$A'}, {'$A'}
1 @ {}, {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}
1 @ {}, {}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}
1 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}
1 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {'$A'}
1 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$A'}
1 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$A'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {'$A'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {}, {'$A'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}
1 @ {}, {'$C', '$B'}, {}, {'$B', '$C'}, {}, {'$A'}
0 @ {}, {'$C', '$B'}, {}, {'$B', '$C'}, {}, {'$B'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {'$A'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {}, {'$A'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {}, {'$C'}, {}, {'$B'}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}
=
$A % PLACE, $B % OBJECT, $C % OBJECT
=
Grab the $B and the $C and bring them to the $A
Bring $C and $B to the $A
Go to the $A, but don't forget the $C and $B
get the $B! get the $C! then bring them to the $A
would you please bring $B and the $C to the $A?
=
((.)* > $B > (.)* > $C | (.)* > $C > (.)* > $B) > (.)* > $A
(((.)* > $B > (.)* > $C | (.)* > $C > (.)* > $B) > (.)*) & (.)* > $A
