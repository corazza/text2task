0 @ {}, {}, {}, {}
0 @ {'$A'}, {'$B'}, {'$C'}
1 @ {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}
0 @ {'$A'}, {'$B'}, {'$C'}, {'$C'}
1 @ {'$A'}, {'$B'}, {'$C'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}
2 @ {'$A'}, {'$B'}, {'$C'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {'$C'}
0 @ {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}
2 @ {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}, {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}
0 @ {'$A'}, {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}
2 @ {'$A'}, {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}, {'$A'}, {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}
0 @ {'$A'}, {'$B'}, {'$C'}, {'$B'}, {'$C'}
2 @ {'$A'}, {'$B'}, {'$C'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {'$B'}, {'$C'}
0 @ {}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}
1 @ {}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}
0 @ {}, {}, {'$B'}, {}, {'$B'}, {}, {'$C'}, {}
0 @ {}, {}, {'$B'}, {}, {'$B'}, {}, {'$C'}, {}, {}, {}, {'$B'}, {}, {'$B'}, {}, {'$C'}, {}
0 @ {}, {}, {'$B'}, {}, {'$B'}, {}, {'$B'}, {}
0 @ {}, {}, {'$B'}, {}, {'$B'}, {}, {'$B'}, {}, {}, {}, {'$B'}, {}, {'$B'}, {}, {'$B'}, {}
0 @ {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}
0 @ {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {'$C'}, {'$B'}, {}
0 @ {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {'$C'}, {'$B'}, {}, {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {'$C'}, {'$B'}, {}
0 @ {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {'$C'}, {'$B'}, {'$C'}
1 @ {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {'$C'}, {'$B'}, {'$C'}, {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {'$C'}, {'$B'}, {'$C'}
0 @ {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {'$C'}
1 @ {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {'$C'}, {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {'$C'}
=
$A % PLACE, $B % PLACE, $C % PLACE
=
Patrol the $A, $B, and $C
Patrol the $A, $B, and $C respectively
Patrol the $A, $B, and $C in that order
Circle the $A, $B, and $C (necessarily in that order)
Patrol the $A, $B, and $C respectively (some number of times)
Do this some number of times: visit the $A, $B, and $C in that order
Circle the $A, $B, and $C for some number of times (necessarily in that order)
=
((.)* > $A > (.)* > $B > (.)* > $C){#N}
=
Patrol the $A, $B, and $C #N

0 @ {}, {}, {}, {}
0 @ {'$A'}, {'$B'}, {'$C'}
1 @ {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}
0 @ {'$A'}, {'$B'}, {'$C'}, {'$C'}
1 @ {'$A'}, {'$B'}, {'$C'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}
2 @ {'$A'}, {'$B'}, {'$C'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {'$C'}
0 @ {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}
2 @ {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}, {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}
0 @ {'$A'}, {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}
2 @ {'$A'}, {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}, {'$A'}, {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}
0 @ {'$A'}, {'$B'}, {'$C'}, {'$B'}, {'$C'}
2 @ {'$A'}, {'$B'}, {'$C'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {'$B'}, {'$C'}
0 @ {}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}
1 @ {}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}
0 @ {}, {}, {'$B'}, {}, {'$B'}, {}, {'$C'}, {}
0 @ {}, {}, {'$B'}, {}, {'$B'}, {}, {'$C'}, {}, {}, {}, {'$B'}, {}, {'$B'}, {}, {'$C'}, {}
0 @ {}, {}, {'$B'}, {}, {'$B'}, {}, {'$B'}, {}
0 @ {}, {}, {'$B'}, {}, {'$B'}, {}, {'$B'}, {}, {}, {}, {'$B'}, {}, {'$B'}, {}, {'$B'}, {}
0 @ {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}
0 @ {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {'$C'}, {'$B'}, {}
0 @ {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {'$C'}, {'$B'}, {}, {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {'$C'}, {'$B'}, {}
0 @ {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {'$C'}, {'$B'}, {'$C'}
1 @ {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {'$C'}, {'$B'}, {'$C'}, {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {'$C'}, {'$B'}, {'$C'}
0 @ {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {'$C'}
1 @ {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {'$C'}, {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {'$C'}
=
$A % PLACE, $B % PLACE, $C % PLACE
=
Patrol the $A, $B, and $C #N
Patrol (#N) the $A, $B, and $C respectively
Patrol the $A, $B, and $C in that order #N
Circle the $A, $B, and $C #N (necessarily in that order)
Circle #N the $A, $B, and $C (necessarily in that order)
=
((.)* > $A > (.)* > $B > (.)* > $C){#N}
=
Patrol the $A, $B, and $C #N

0 @ {}, {}, {}, {}
0 @ {'$S'}, {'$A'}, {'$B'}, {'$C'}, {'$F'}, {'$F'}
1 @ {'$S'}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {'$F'}
0 @ {'$S'}, {'$A'}, {'$B'}, {'$C'}, {'$C'}, {'$F'}, {'$F'}
1 @ {'$S'}, {'$A'}, {'$B'}, {'$C'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {'$C'}, {'$F'}
0 @ {'$S'}, {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}, {'$F'}, {'$F'}
2 @ {'$S'}, {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}, {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}, {'$F'}, {'$F'}
0 @ {'$S'}, {'$A'}, {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}, {'$F'}, {'$F'}
2 @ {'$S'}, {'$A'}, {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}, {'$A'}, {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}, {'$F'}, {'$F'}
1 @ {'$S'}, {'$A'}, {'$B'}, {'$C'}, {'$F'}, {'$S'}, {'$A'}, {'$B'}, {'$C'}, {'$F'}
0 @ {}, {'$S'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$F'}
1 @ {}, {'$S'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$F'}, {}, {}, {'$S'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$F'}, {}
0 @ {}, {'$S'}, {}, {'$B'}, {}, {'$B'}, {}, {'$C'}, {'$B'}, {}, {'$B'}, {}, {'$C'}, {}, {'$F'}
0 @ {}, {'$S'}, {}, {'$B'}, {}, {'$B'}, {}, {'$B'}, {}, {}, {'$B'}, {}, {'$B'}, {}, {'$B'}, {}, {'$F'}
0 @ {}, {'$S'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$F'}
0 @ {}, {'$S'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {'$C'}, {'$B'}, {}, {'$F'}
1 @ {}, {'$S'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {'$C'}, {'$B'}, {'$C'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {'$C'}, {'$B'}, {'$C'}, {'$F'}
1 @ {}, {'$S'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {'$C'}, {'$S'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {'$C'}, {'$F'}
=
$S % PLACE, $A % PLACE, $B % PLACE, $C % PLACE, $F % PLACE
=
Start from the $S, then patrol the $A, $B, and $C respectively #N. End at the $F
Starting from the $S, patrol the $A, $B, and $C #N in that order. End at the $F
Starting from the $S, circle the $A, $B, and $C #N (necessarily in that order), then finish at the $F
Start at $S and end at $F. In between patrol the $A, the $B, and the $C (#N)
Patrol the $A, $B, and the $C #N, but start at the $S and end at the $F
Find the $S and then patrol the $A, $B and the $C #N, then go to the $F
=
(.)* > $S > ((.)* > $A > (.)* > $B > (.)* > $C){#N} > (.)* > $F
=
Start from the $S, then patrol the $A, $B, and $C respectively. End at the $F

0 @ {}, {}, {}, {}
0 @ {'$S'}, {'$A'}, {'$B'}, {'$C'}, {'$F'}, {'$F'}
1 @ {'$S'}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {'$F'}
0 @ {'$S'}, {'$A'}, {'$B'}, {'$C'}, {'$C'}, {'$F'}, {'$F'}
1 @ {'$S'}, {'$A'}, {'$B'}, {'$C'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {'$C'}, {'$F'}
0 @ {'$S'}, {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}, {'$F'}, {'$F'}
2 @ {'$S'}, {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}, {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}, {'$F'}, {'$F'}
0 @ {'$S'}, {'$A'}, {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}, {'$F'}, {'$F'}
2 @ {'$S'}, {'$A'}, {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}, {'$A'}, {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}, {'$F'}, {'$F'}
1 @ {'$S'}, {'$A'}, {'$B'}, {'$C'}, {'$F'}, {'$S'}, {'$A'}, {'$B'}, {'$C'}, {'$F'}
0 @ {}, {'$S'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$F'}
1 @ {}, {'$S'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$F'}, {}, {}, {'$S'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$F'}, {}
0 @ {}, {'$S'}, {}, {'$B'}, {}, {'$B'}, {}, {'$C'}, {'$B'}, {}, {'$B'}, {}, {'$C'}, {}, {'$F'}
0 @ {}, {'$S'}, {}, {'$B'}, {}, {'$B'}, {}, {'$B'}, {}, {}, {'$B'}, {}, {'$B'}, {}, {'$B'}, {}, {'$F'}
0 @ {}, {'$S'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$F'}
0 @ {}, {'$S'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {'$C'}, {'$B'}, {}, {'$F'}
1 @ {}, {'$S'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {'$C'}, {'$B'}, {'$C'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {'$C'}, {'$B'}, {'$C'}, {'$F'}
1 @ {}, {'$S'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {'$C'}, {'$S'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {'$C'}, {'$F'}
=
$S % PLACE, $A % PLACE, $B % PLACE, $C % PLACE, $F % PLACE
=
Start from the $S, then patrol the $A, $B, and $C respectively. End at the $F
Starting from the $S, patrol the $A, $B, and $C in that order. End at the $F
Starting from the $S, circle the $A, $B, and $C (necessarily in that order), then finish at the $F
Start at $S and end at $F. In between patrol the $A, the $B, and the $C
Patrol the $A, $B, and the $C, but start at the $S and end at the $F
Find the $S and then patrol the $A, $B and the $C, then go to the $F
=
(.)* > $S > ((.)* > $A > (.)* > $B > (.)* > $C){#N} > (.)* > $F
=
Start from the $S, then patrol the $A, $B, and $C respectively. End at the $F

0 @ {}, {}, {}, {}
0 @ {'$S'}, {'$A'}, {'$B'}, {'$C'}, {'$F'}
0 @ {'$S'}, {'$B'}, {'$C'}, {'$A'}, {'$F'}
0 @ {'$S'}, {'$C'}, {'$A'}, {'$B'}, {'$F'}
0 @ {'$S'}, {'$C'}, {'$B'}, {'$A'}, {'$F'}
1 @ {'$S'}, {'$A'}, {'$C'}, {'$B'}, {'$A'}, {'$C'}, {'$B'}, {'$F'}
1 @ {'$S'}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$C'}, {'$B'}, {'$F'}
1 @ {'$S'}, {'$B'}, {'$C'}, {'$A'}, {'$A'}, {'$C'}, {'$B'}, {'$F'}
1 @ {'$S'}, {'$C'}, {'$A'}, {'$B'}, {'$A'}, {'$C'}, {'$B'}, {'$F'}
1 @ {'$S'}, {'$C'}, {'$B'}, {'$A'}, {'$A'}, {'$C'}, {'$B'}, {'$F'}
1 @ {'$S'}, {'$A'}, {'$C'}, {'$B'}, {'$A'}, {'$C'}, {'$B'}, {'$F'}
0 @ {'$S'}, {'$B'}, {'$A'}, {'$F'}
0 @ {'$S'}, {'$A'}, {'$B'}, {'$C'}, {'$F'}, {'$F'}
1 @ {'$S'}, {'$A'}, {'$B'}, {'$C'}, {'$F'}, {'$S'}, {'$A'}, {'$B'}, {'$C'}, {'$F'}
0 @ {}, {'$S'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$F'}
1 @ {}, {'$S'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$F'}, {}, {}, {'$S'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$F'}, {}
0 @ {}, {'$S'}, {}, {'$B'}, {}, {'$B'}, {}, {'$C'}, {}, {'$F'}
0 @ {}, {'$S'}, {}, {'$B'}, {}, {'$B'}, {}, {'$B'}, {}, {'$F'}
0 @ {}, {'$S'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$F'}
0 @ {}, {'$S'}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {}, {'$F'}
0 @ {}, {'$S'}, {}, {'$C'}, {'$C'}, {}, {'$B'}, {'$B'}, {}, {'$A'}, {'$A'}, {}
0 @ {}, {'$S'}, {}, {'$A'}, {'$C'}, {}, {'$B'}, {}, {}, {}, {}, {}, {'$F'}
1 @ {}, {'$S'}, {}, {'$C'}, {'$C'}, {}, {'$B'}, {'$B'}, {}, {'$A'}, {'$A'}, {'$C'}, {'$C'}, {}, {'$B'}, {'$B'}, {}, {'$A'}, {'$A'}, {}, {'$F'}
=
$S % PLACE, $A % PLACE, $B % PLACE, $C % PLACE, $F % PLACE
=
Start from the $S, then patrol the $A, $B, and $C in any order. End at the $F
Starting from the $S, patrol the $A, $B, and $C in whichever order. End at the $F
Starting from the $S, circle the $A, $B, and $C (not necessarily in that order), then finish at the $F
Start at $S and end at $F. In between patrol the $A, the $B, and the $C in whatever order
Patrol the $A, $B, and the $C (not necessarily in that order), but start at the $S and end at the $F
Find the $S and then patrol the $A, $B and the $C in any order, then go to the $F
=
(.)* > $S > ((.)* > $A > (.)* > $B > (.)* > $C | (.)* > $B > (.)* > $C > (.)* > $A | (.)* > $C > (.)* > $A > (.)* > $B | (.)* > $C > (.)* > $B > (.)* > $A | (.)* > $A > (.)* > $C > (.)* > $B | (.)* > $B > (.)* > $A > (.)* > $C){#N} > (.)* > $F

0 @ {}
1 @ {}, {}, {'$A'}
1 @ {'$A'}
2 @ {'$A'}, {'$A'}
0 @ {}, {}, {}
=
$A % DIRECTION
=
Go $A at least once
Go $A once
Do anything but go $A at least once
Do anything but go $A once
Your task is to go $A at least once
=
(.)* > $A
((.)* > $A){1}

0 @ {}
0 @ {}, {}, {'$A'}
0 @ {'$A'}
1 @ {'$A'}, {'$A'}
0 @ {}, {}, {}
1 @ {}, {}, {'$A'}, {}, {}, {'$A'}
=
$A % DIRECTION
=
Go $A at least twice
Go $A twice
Do anything but go $A at least twice
Do anything but go $A twice
Your task is to go $A at least twice
=
(.)* > $A > (.)* > $A
((.)* > $A){2}

0 @ {}
1 @ {}, {}, {'$A'}
1 @ {'$A'}
2 @ {'$A'}, {'$A'}
0 @ {}, {}, {}
=
$A % PLACE
=
Get to the $A
Go to the $A
Visit the $A
Find the $A
You have to go to the $A
=
(.)* > $A

0 @ {}
1 @ {}, {}, {'$A'}
1 @ {'$A'}
2 @ {'$A'}, {'$A'}
0 @ {}, {}, {}
=
$A % NO_THE
=
Find $A
Get $A
You have to find $A
=
(.)* > $A
=
Find $A

0 @ {}
1 @ {}, {}, {'$A'}, {}, {'$A'}
0 @ {'$A'}
1 @ {'$A'}, {'$A'}
0 @ {}, {}, {}
=
$A % COLLECTABLE
=
Find $As
Get $As
You have to find $As
=
((.)* > $A){#N}
=
Find $A

0 @ {}
1 @ {}, {}, {'$A'}
1 @ {'$A'}
2 @ {'$A'}, {'$A'}
0 @ {}, {}, {}
=
$A % OBJECT_A
=
Find a $A
Get a $A
You have to find a $A
=
(.)* > $A
=
Find $A

0 @ {}, {}, {}
1 @ {'$A'}, {'$B'}, {'$C'}
2 @ {'$A'}, {'$B'}, {'$C'}, {'$C'}
2 @ {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}
2 @ {'$A'}, {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}
1 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}
2 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {'$C'}
0 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}
0 @ {}, {'$C'}, {}, {'$A'}, {}, {'$B'}
1 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}
=
$A % PLACE, $B % PLACE, $C % PLACE
=
Visit the $A, $B, and $C in that order
First go to the $A. Then go to the $B. Finally, go to the $C.
Visit in order: $A, $B, $C
Visit in reverse order: $C, $B, $A
Go to the $A, then the $B, then the $C
=
(.)* > $A > (.)* > $B > (.)* > $C

0 @ {}, {}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}
0 @ {}, {'$B'}, {}, {'$C'}
0 @ {}, {'$A'}, {}, {}, {'$C'}
0 @ {}, {'$A'}, {}, {'$B'}, {}
1 @ {}, {'$A'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}
1 @ {}, {'$A'}, {}, {'$A'}, {}, {'$B'}, {}, {'$B'}, {}, {'$C'}
2 @ {}, {'$A'}, {}, {'$A'}, {}, {'$B'}, {}, {'$B'}, {}, {'$C'}, {}, {'$C'}, {}
1 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}
1 @ {}, {'$C'}, {}, {'$A'}, {}, {'$B'}
3 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}
2 @ {}, {}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}
0 @ {'$C'}, {'$B'}, {'$A'}
0 @ {}, {'$C'}, {}, {'$B'}, {}, {'$A'}
0 @ {}, {'$C'}, {'$C'}, {}, {'$B'}, {'$B'}, {}, {'$A'}, {'$A'}
2 @ {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}
=
$A % PLACE, $B % PLACE, $C % PLACE
=
Visit the $A, the $B, and the $C. Start from any of them, but respect that order
Go to the $A, the $B, and the $C (start from any of them but respect that order)
Visit in order: $A, $B, $C. But, you can choose either of the three as a starting place
Go to (in order): $A, $B, $C (but, you can choose either of the three as a starting place)
=
(.)* > $A > (.)* > $B > (.)* > $C | (.)* > $B > (.)* > $C > (.)* > $A | (.)* > $C > (.)* > $A > (.)* > $B

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
2 @ {}, {'$A'}, {}, {'$B'}, {}, {}, {'$C'}, {}, {}, {}, {}, {}
0 @ {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$C'}
0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}
1 @ {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}
0 @ {}, {}, {}, {}, {}, {'$C'}, {}, {}, {}, {}, {}, {}
1 @ {}, {}, {}, {}, {}, {'$C'}, {}, {}, {}, {}, {}, {'$C'}
4 @ {'$A'}, {'$A'}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}
5 @ {'$A'}, {'$A'}, {'$A'}, {'$C'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}
=
$A % OBJECT, $B % OBJECT, $C % PLACE
=
get the $A or the $B or go to the $C, repeat
Either go to the $C, or find the $A or the $B, repeatedly
You have three options to repeat: go to the $C, find the $A, or find the $B
=
((.)* > ($A | $B | $C)){#N}
=
get the $A or the $B or go to the $C, repeat

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
2 @ {}, {'$A'}, {}, {'$B'}, {}, {}, {'$C'}, {}, {}, {}, {}, {}
0 @ {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$C'}
0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}
1 @ {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}
0 @ {}, {}, {}, {}, {}, {'$C'}, {}, {}, {}, {}, {}, {}
1 @ {}, {}, {}, {}, {}, {'$C'}, {}, {}, {}, {}, {}, {'$C'}
4 @ {'$A'}, {'$A'}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}
5 @ {'$A'}, {'$A'}, {'$A'}, {'$C'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}
=
$A % OBJECT, $B % OBJECT, $C % PLACE
=
get the $A or the $B or go to the $C, repeat #N
Either go to the $C, or find the $A or the $B #N
You have three options to repeat #N: go to the $C, find the $A, or find the $B
=
((.)* > ($A | $B | $C)){#N}
=
get the $A or the $B or go to the $C, repeat

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
2 @ {}, {'$A'}, {}, {'$B'}, {}, {}, {'$C'}, {}, {}, {}, {}, {}
0 @ {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$C'}
0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}
1 @ {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}
0 @ {}, {}, {}, {}, {}, {'$C'}, {}, {}, {}, {}, {}, {}
1 @ {}, {}, {}, {}, {}, {'$C'}, {}, {}, {}, {}, {}, {'$C'}
4 @ {'$A'}, {'$A'}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}
5 @ {'$A'}, {'$A'}, {'$A'}, {'$C'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}
=
$A % OBJECT, $B % PLACE, $C % PLACE
=
get the $A or go to the $B or the $C, repeat
Either get the $A, or go to the $B or the $C, repeatedly
You have three options to repeat: go to the $C, find the $A, or go to the $B
=
((.)* > ($A | $B | $C)){#N}
=
get the $A or the $B or go to the $C, repeat

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
2 @ {}, {'$A'}, {}, {'$B'}, {}, {}, {'$C'}, {}, {}, {}, {}, {}
0 @ {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$C'}
0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}
1 @ {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}
0 @ {}, {}, {}, {}, {}, {'$C'}, {}, {}, {}, {}, {}, {}
1 @ {}, {}, {}, {}, {}, {'$C'}, {}, {}, {}, {}, {}, {'$C'}
4 @ {'$A'}, {'$A'}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}
5 @ {'$A'}, {'$A'}, {'$A'}, {'$C'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}
=
$A % OBJECT, $B % PLACE, $C % PLACE
=
get the $A or go to the $B or the $C, repeat #N
Either get the $A, or go to the $B or the $C #N
You have three options to repeat #N: go to the $C, find the $A, or go to the $B
=
((.)* > ($A | $B | $C)){#N}
=
get the $A or the $B or go to the $C, repeat

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$B'}, {}, {}, {'$C'}, {}, {}, {}, {}, {}
0 @ {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}
0 @ {}, {}, {}, {}, {}, {'$C'}, {}, {}, {}, {}, {}, {}
0 @ {'$A'}, {'$A'}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}
0 @ {'$A'}, {'$A'}, {'$A'}, {'$C'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {}, {}, {'$C'}, {}, {}, {}, {}, {'$F'}
1 @ {'$A'}, {}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$F'}
1 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {'$B'}, {'$F'}
1 @ {}, {}, {}, {}, {}, {'$C'}, {}, {}, {'$A'}, {}, {'$B'}, {}, {'$F'}
1 @ {'$A'}, {'$A'}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {'$F'}
1 @ {'$A'}, {'$A'}, {'$A'}, {'$C'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {'$F'}
=
$A % OBJECT, $B % OBJECT, $C % PLACE, $F % PLACE
=
get the $A or the $B or go to the $C, repeat. After doing that, end at the $F
Either go to the $C, or find the $A or the $B, repeatedly: and then go to the $F
You have three options to repeat: go to the $C, find the $A, or find the $B. Afterwards, visit the $F
=
((.)* > ($A | $B | $C)){#N} > (.)* > $F
=
get the $A or the $B or go to the $C, repeat. After doing that, end at the $F

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$B'}, {}, {}, {'$C'}, {}, {}, {}, {}, {}
0 @ {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}
0 @ {}, {}, {}, {}, {}, {'$C'}, {}, {}, {}, {}, {}, {}
0 @ {'$A'}, {'$A'}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}
0 @ {'$A'}, {'$A'}, {'$A'}, {'$C'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {}, {}, {'$C'}, {}, {}, {}, {}, {'$F'}
1 @ {'$A'}, {}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$F'}
1 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {'$B'}, {'$F'}
1 @ {}, {}, {}, {}, {}, {'$C'}, {}, {}, {'$A'}, {}, {'$B'}, {}, {'$F'}
1 @ {'$A'}, {'$A'}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {'$F'}
1 @ {'$A'}, {'$A'}, {'$A'}, {'$C'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {'$F'}
=
$A % OBJECT, $B % OBJECT, $C % PLACE, $F % PLACE
=
get the $A or the $B or go to the $C #N. After doing that, end at the $F
Either go to the $C, or find the $A or the $B #N: and then go to the $F
You have three options to repeat #N: go to the $C, find the $A, or find the $B. Afterwards, visit the $F
=
((.)* > ($A | $B | $C)){#N} > (.)* > $F
=
get the $A or the $B or go to the $C, repeat. After doing that, end at the $F

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$B'}, {'$B'}, {'$C', '$B'}
0 @ {}, {'$A'}, {}, {'$B'}, {'$B'}, {'$C', '$B'}, {'$B'}, {'$B'}, {}, {'$B'}, {}, {'$C'}, {}, {}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {'$B'}, {'$C', '$B'}, {'$B'}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}
1 @ {}, {'$A', '$B'}, {'$B'}, {'$B'}, {'$B'}, {'$C', '$B'}, {'$B'}, {'$B'}, {'$B'}, {'$A', '$B'}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {'$B'}, {'$C', '$B'}, {'$B', '$C'}, {'$B', '$C'}, {}, {'$A'}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {'$B'}, {'$C', '$B'}, {'$B', '$C'}, {'$B', '$C'}, {'$C'}, {'$A', '$C'}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$B'}, {'$B'}, {'$C'}, {'$B'}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$B'}, {'$B'}, {'$B'}, {'$B'}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}
=
$A % PLACE, $B % AREA, $C % PLACE
=
start from the $A and find the $B. then find the $C in the $B. return to $A
begin and end in the $A. so, starting from the $A, find the $B. and in the $B, find the $C. don't forget to return to $A
start and finish in the $A. so, starting from the $A, find the $B. and in the $B, find the $C
Find the $A. Then, find the $C in the $B. Finally, return to the $A
Find the $A, then find the $C in the $B, then return to the $A
=
(.)* > $A > (.)* > $B&$C > (.)* > $A
(.)* > $A > (.)* > ((.)* > $C > (.)*)&($B)* > (.)* > $A

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$C'}, {}, {'$D'}, {}, {'$A'}, {}, {}, {}, {}
1 @ {}, {'$A'}, {}, {'$C'}, {}, {'$D'}, {}, {'$B'}, {}, {}, {}, {}
1 @ {}, {'$A'}, {}, {'$A'}, {}, {'$C'}, {}, {'$C'}, {}, {'$D'}, {}, {'$D'}, {}, {'$B'}, {}, {'$B'}, {}, {}
1 @ {}, {'$A'}, {}, {'$A'}, {}, {'$C'}, {}, {'$C'}, {}, {'$D'}, {}, {'$D'}, {}, {'$B'}, {}, {'$B'}, {}, {}, {}, {'$A'}, {}, {'$A'}, {}, {'$C'}, {}, {'$C'}, {}, {'$D'}, {}, {'$D'}, {}, {'$B'}, {}, {'$B'}, {}, {}
0 @ {}, {'$A'}, {}, {'$C'}, {}, {'$D'}, {}, {'$C'}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$C'}, {}, {'$D'}, {}, {'$D'}, {}, {}, {}, {}
1 @ {}, {'$A'}, {}, {'$C'}, {}, {'$D'}, {}, {'$B'}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$C'}, {}, {'$D'}, {}, {'$B'}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$C'}, {}, {'$D'}, {}, {'$B'}, {}, {}, {}, {}
1 @ {}, {'$B'}, {}, {'$A'}, {'$C'}, {}, {'$C'}, {'$A'}, {}, {'$D'}, {'$D'}, {'$B'}, {}, {}, {}, {}
=
$A % PLACE, $B % PLACE, $C % OBJECT, $D % OBJECT
=
go to the $A, then get the $C. afterwards run to get the $D, and finally go to the $B
in this order: $A, $C, $D, $B
in reverse order: $B, $D, $C, $A
You have to do four things. First, go to the $A. Second, get the $C. Third, get the $D. And finally go to the $B.
Go to the $A, then find the $C, then find the $D, then go to the $B
=
(.)* > $A > (.)* > $C > (.)* > $D > (.)* > $B

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
2 @ {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
3 @ {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$B'}, {'$C'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {'$C'}, {}, {'$B'}, {}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$C'}, {'$B'}, {}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
=
$A % PLACE, $B % OBJECT, $C % AVOID
=
get the $B then go to the $A all the while avoiding the $C
before exiting through the $A, grab the $B! avoid the $C
while avoiding the $C: collect the $B and get to the $A
(in reverse order) get to the $A (avoid the $C) then get the $B (also avoid the $C)
=
(!$C)* > $B&!$C > (!$C)* > $A&!$C
((.)* > $B > (.)* > $A) & (!$C)*
=
before exiting through the $A, grab the $B! avoid $Cs

0 @ {}, {'$C'}, {'$B'}, {}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
=
$A % PLACE, $B % OBJECT, $C % OBJECT_A
=
get the $B then go to the $A all the while avoiding $Cs
before exiting through the $A, grab the $B! don't approach $Cs
while avoiding the $C: collect the $B and get to the $A
(in reverse order) get to the $A (avoid the $Cs) then get the $B (also avoid $Cs)
=
(!$C)* > $B&!$C > (!$C)* > $A&!$C
((.)* > $B > (.)* > $A) & (!$C)*
=
before exiting through the $A, grab the $B! avoid $Cs

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$B'}, {'$C'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {'$C'}, {}, {'$B'}, {}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$C'}, {'$B'}, {}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
=
$A % PLACE, $B % OBJECT, $C % STEP_ON_A
=
get the $B then go to the $A all the while avoding stepping on a $C
before exiting through the $A, grab the $B! never step on a $C
without stepping on a $C: collect the $B and get to the $A
(in reverse order) get to the $A (don't step on $Cs) then get the $B (also don't step on $Cs)
=
(!$C)* > $B&!$C > (!$C)* > $A&!$C
((.)* > $B > (.)* > $A) & (!$C)*
=
before exiting through the $A, grab the $B! avoid $Cs

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$B'}, {'$C'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {'$C'}, {}, {'$B'}, {}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$C'}, {'$B'}, {}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
=
$A % PLACE, $B % OBJECT, $C % HIT_A
=
get the $B then go to the $A, but don't hit $Cs
before exiting through the $A, grab the $B! don't hit $Cs
without hitting a $C: collect the $B and get to the $A
(in reverse order) get to the $A (don't hit $Cs) then get the $B (also never hit a $C)
=
(!$C)* > $B&!$C > (!$C)* > $A&!$C
((.)* > $B > (.)* > $A) & (!$C)*
=
before exiting through the $A, grab the $B! avoid $Cs

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$B'}, {}, {}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {'$C'}, {}, {'$B'}, {}, {'$A'}, {}, {}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$C'}, {'$B'}, {}, {'$A'}, {}, {}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
=
$A % PLACE, $B % OBJECT, $C % FALL_IN_A
=
get the $B then go to the $A, but don't fall into a $C
before exiting through the $A, grab the $B! never fall into a $C
without falling into a $C: collect the $B and get to the $A
do the following in reverse order: get to the $A then get the $B. avoid $Cs though
do the following in reverse order: get to the $A then get the $B (don't fall in $Cs though)
=
(!$C)* > $B&!$C > (!$C)* > $A&!$C
((.)* > $B > (.)* > $A) & (!$C)*
=
before exiting through the $A, grab the $B! avoid $Cs

0 @ {}, {}
0 @ {}, {}, {'$A'}, {'$B'}, {}
0 @ {}, {}, {'$A'}, {}, {'$B'}, {'$A'}, {'$B'}, {}
0 @ {}, {}, {'$A'}, {'$B'}, {}
1 @ {}, {}, {'$A'}, {}, {'$B', '$A'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$B'}, {'$B', '$A'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B'}, {'$B', '$A'}, 
1 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$B', '$A'}
0 @ {}, {'$B'}, {}, {'$A'}, {'$B', '$A'}
1 @ {}, {'$B'}, {}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
0 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}
1 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
1 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B'}, {'$B', '$A'}, 
1 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
1 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$B', '$A'}
=
$A % AREA, $B % COLLECTABLE
=
Go to the $A and gather $Bs
We need $Bs from the $A
Once you get to the $A gather $Bs
Find $Bs in the $A
=
#(.)* > (($A)* > $B&$A){##N}
#(.)* > (((.)* > $B){##N} & ($A)*)
((.)* > ($B&$A)){##N}
=
Go to the $A and gather $Bs

0 @ {}, {}
0 @ {}, {}, {'$A'}, {'$B'}, {}
0 @ {}, {}, {'$A'}, {}, {'$B'}, {'$A'}, {'$B'}, {}
0 @ {}, {}, {'$A'}, {'$B'}, {}
1 @ {}, {}, {'$A'}, {}, {'$B', '$A'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$B'}, {'$B', '$A'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B'}, {'$B', '$A'}, 
1 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$B', '$A'}
0 @ {}, {'$B'}, {}, {'$A'}, {'$B', '$A'}
1 @ {}, {'$B'}, {}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
0 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}
1 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
1 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B'}, {'$B', '$A'}, 
1 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
1 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$B', '$A'}
=
$A % AREA, $B % COLLECTABLE
=
Go to the $A and gather ##N $Bs
We need ##N $Bs from the $A
Once you get to the $A gather ##N $Bs
Find ##N $Bs in the $A
=
#(.)* > (($A)* > $B&$A){##N}
#(.)* > (((.)* > $B){##N} & ($A)*)
((.)* > ($B&$A)){##N}
=
Go to the $A and gather $Bs

0 @ {}, {}
0 @ {}, {}, {'$A'}, {'$B'}, {}
0 @ {}, {}, {'$A'}, {}, {'$B'}, {'$A'}, {'$B'}, {}
0 @ {}, {}, {'$A'}, {'$B'}, {}
0 @ {}, {}, {'$A'}, {}, {'$B', '$A'}
0 @ {}, {}, {'$A'}, {'$B'}, {'$B', '$A'}
0 @ {}, {}, {'$A'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
0 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$B', '$A'}
0 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B'}, {'$B', '$A'}, 
1 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
0 @ {}, {'$B'}, {}, {'$A'}, {'$B', '$A'}
1 @ {}, {'$B'}, {}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$B', '$A'}
0 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}
1 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$A'}, {'$B', '$A'}
0 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B'}, {'$B', '$A'}, 
1 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}, {'$B'}, {'$B', '$A'}, 
1 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
1 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$B', '$A'}
=
$A % AREA, $B % COLLECTABLE
=
Go to the $A and gather $Bs, but don't leave the $A once you get there
Once you get to the $A don't leave it and gather $Bs
Find the $A and don't leave it. Inside the $A get $Bs
=
(!$A)* > (($A)* > $B&$A){##N}
(!$A)* > (((.)* > $B){##N} & ($A)*)
=
Go to the $A and gather $Bs, but don't leave the $A once you get there

0 @ {}, {}
0 @ {}, {}, {'$A'}, {'$B'}, {}
0 @ {}, {}, {'$A'}, {}, {'$B'}, {'$A'}, {'$B'}, {}
0 @ {}, {}, {'$A'}, {'$B'}, {}
0 @ {}, {}, {'$A'}, {}, {'$B', '$A'}
0 @ {}, {}, {'$A'}, {'$B'}, {'$B', '$A'}
0 @ {}, {}, {'$A'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
0 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$B', '$A'}
0 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B'}, {'$B', '$A'}, 
1 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
0 @ {}, {'$B'}, {}, {'$A'}, {'$B', '$A'}
1 @ {}, {'$B'}, {}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$B', '$A'}
0 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}
1 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$A'}, {'$B', '$A'}
0 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B'}, {'$B', '$A'}, 
1 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}, {'$B'}, {'$B', '$A'}, 
1 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
1 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$B', '$A'}
=
$A % AREA, $B % COLLECTABLE
=
Go to the $A and gather ##N $Bs, but don't leave the $A once you get there
Once you get to the $A don't leave it and gather ##N $Bs
Find the $A and don't leave it. Inside the $A get ##N $Bs
=
(!$A)* > (($A)* > $B&$A){##N}
(!$A)* > (((.)* > $B){##N} & ($A)*)
=
Go to the $A and gather $Bs, but don't leave the $A once you get there

0 @ {}, {}
0 @ {}, {}, {'$A'}, {'$B'}, {}
0 @ {}, {}, {'$A'}, {}, {'$B'}, {'$A'}, {'$B'}, {}
0 @ {}, {}, {'$A'}, {'$B'}, {}
1 @ {}, {}, {'$A'}, {}, {'$B', '$A'}, {'$B', '$A'}
0 @ {}, {}, {'$A'}, {'$B'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
0 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B'}, {'$B', '$A'}, 
1 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$B', '$A'}, {'$B'}, {'$B', '$A'}, 
0 @ {}, {'$B'}, {}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$B', '$A'}
0 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
0 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}, {'$B'}, {'$B', '$A'}
0 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
0 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$B', '$A'}
=
$A % AREA, $B % COLLECTABLE
=
Go to the $A and find $Bs, but avoid $Bs before getting to the $A
Go to the $A and avoid any $Bs on the way there. In the $A, find $Bs
Get to the $A and avoid any $Bs on the way there, and find $Bs in the $A
There are many $Bs in the $A. Go and find them, but on the way to the $A avoid the $Bs
=
(!$B)* > (($A)* > $B&$A){##N}
(!$B)* > (((.)* > $B){#NN} & ($A)*)
=
Go to the $A and find $Bs, but avoid $Bs before getting to the $A

0 @ {}, {}
0 @ {}, {}, {'$A'}, {'$B'}, {}
0 @ {}, {}, {'$A'}, {}, {'$B'}, {'$A'}, {'$B'}, {}
0 @ {}, {}, {'$A'}, {'$B'}, {}
1 @ {}, {}, {'$A'}, {}, {'$B', '$A'}, {'$B', '$A'}
0 @ {}, {}, {'$A'}, {'$B'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
0 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B'}, {'$B', '$A'}, 
1 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$B', '$A'}, {'$B'}, {'$B', '$A'}, 
0 @ {}, {'$B'}, {}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$B', '$A'}
0 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
0 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}, {'$B'}, {'$B', '$A'}
0 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
0 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$B', '$A'}
=
$A % AREA, $B % COLLECTABLE
=
Go to the $A and find ##N $Bs, but avoid $Bs before getting to the $A
Go to the $A and avoid any $Bs on the way there. In the $A, find ##N $Bs
Get to the $A and avoid any $Bs on the way there, and find ##N $Bs in the $A
There are many $Bs in the $A. Go and find ##N of them, but on the way to the $A avoid the $Bs
=
(!$B)* > (($A)* > $B&$A){##N}
(!$B)* > (((.)* > $B){#NN} & ($A)*)
=
Go to the $A and find $Bs, but avoid $Bs before getting to the $A

0 @ {}, {}
0 @ {}, {}, {'$A'}, {'$B'}, {}
0 @ {}, {}, {'$A'}, {}, {'$B'}, {'$A'}, {'$B'}, {}
0 @ {}, {}, {'$A'}, {}, {'$B', '$A'}, {'$B', '$A'}
0 @ {}, {}, {'$A'}, {'$B'}, {'$B', '$A'}, {'$A'}, {'$B'}, {'$B', '$A'}
0 @ {}, {}, {'$A'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
0 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$A'}, {'$B', '$A'}
0 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$B', '$A'}
0 @ {}, {'$B'}, {}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$B', '$A'}
0 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$A'}, {'$B', '$A'}
0 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$B', '$A'}, {'$B'}, {'$B', '$A'}, {'$B', '$A'}
0 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
0 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$B', '$A'}
=
$A % AREA, $B % COLLECTABLE
=
Go to the $A and find $Bs, but avoid $Bs before getting to the $A, and never leave the $A once you get there
Go to the $A and avoid any $Bs on the way there. In the $A, find $Bs without leaving the $A
Get to the $A and avoid any $Bs on the way there, and while never leaving the $A find $Bs there
There are many $Bs in the $A. Go and find them, but on the way to the $A avoid the $Bs, and once you get there don't leave
=
(!$B&!$A)* > (($A)* > $B&$A){##N}
(!$B&!$A)* > (((.)* > $B){##N} & ($A)*)
=
Go to the $A and find $Bs, but avoid $Bs before getting to the $A, and never leave the $A once you get there

0 @ {}, {}
0 @ {}, {}, {'$A'}, {'$B'}, {}
0 @ {}, {}, {'$A'}, {}, {'$B'}, {'$A'}, {'$B'}, {}
0 @ {}, {}, {'$A'}, {}, {'$B', '$A'}, {'$B', '$A'}
0 @ {}, {}, {'$A'}, {'$B'}, {'$B', '$A'}, {'$A'}, {'$B'}, {'$B', '$A'}
0 @ {}, {}, {'$A'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
0 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$A'}, {'$B', '$A'}
0 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$B', '$A'}
0 @ {}, {'$B'}, {}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$B', '$A'}
0 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$A'}, {'$B', '$A'}
0 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$B', '$A'}, {'$B'}, {'$B', '$A'}, {'$B', '$A'}
0 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
0 @ {}, {'$B'}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$B', '$A'}
=
$A % AREA, $B % COLLECTABLE
=
Go to the $A and find ##N $Bs, but avoid $Bs before getting to the $A, and never leave the $A once you get there
Go to the $A and avoid any $Bs on the way there. In the $A, find ##N $Bs without leaving the $A
Get to the $A and avoid any $Bs on the way there, and while never leaving the $A find ##N $Bs there
There are many $Bs in the $A. Go and find ##N of them, but on the way to the $A avoid the $Bs, and once you get there don't leave
=
(!$B&!$A)* > (($A)* > $B&$A){##N}
(!$B&!$A)* > (((.)* > $B){##N} & ($A)*)
=
Go to the $A and find $Bs, but avoid $Bs before getting to the $A, and never leave the $A once you get there

0 @ {}, {}, {}
0 @ {}, {}, {}, {'$B'}, {'$B'}, {}, {'$A'}
0 @ {}, {}, {}, {'$C'}, {'$C'}, {}, {'$A'}
1 @ {}, {}, {}, {'$B'}, {'$C'}, {}, {'$A'}
1 @ {}, {}, {}, {'$C'}, {'$B'}, {}, {'$A'}
1 @ {}, {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}
1 @ {}, {}, {}, {'$B'}, {'$B'}, {'$C'}, {'$C'}, {'$A'}, {'$A'}
1 @ {}, {}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}
1 @ {}, {}, {}, {'$C'}, {'$C'}, {'$B'}, {'$B'}, {'$A'}, {'$A'}
1 @ {}, {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}
1 @ {}, {}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}
1 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}
1 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {'$A'}
1 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$A'}
1 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$A'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {'$A'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {}, {'$A'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}
1 @ {}, {'$C', '$B'}, {}, {'$B', '$C'}, {}, {'$A'}
0 @ {}, {'$C', '$B'}, {}, {'$B', '$C'}, {}, {'$B'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {'$A'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {}, {'$A'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {}, {'$C'}, {}, {'$B'}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}
=
$A % PLACE, $B % OBJECT, $C % OBJECT
=
Grab the $B and the $C and bring them to the $A
Bring $C and $B to the $A
Go to the $A, but don't forget the $C and $B
get the $B! get the $C! then bring them to the $A
would you please bring $B and the $C to the $A?
=
((.)* > $B > (.)* > $C | (.)* > $C > (.)* > $B) > (.)* > $A
(((.)* > $B > (.)* > $C | (.)* > $C > (.)* > $B) > (.)*) & (.)* > $A

0 @ {}, {}, {}
0 @ {}, {}, {}, {'$B'}, {'$B'}, {}, {'$A'}
0 @ {}, {}, {}, {'$C'}, {'$C'}, {}, {'$A'}
1 @ {}, {}, {}, {'$B'}, {'$C'}, {}, {'$A'}
1 @ {}, {}, {}, {'$C'}, {'$B'}, {}, {'$A'}
1 @ {}, {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}
1 @ {}, {}, {}, {'$B'}, {'$B'}, {'$C'}, {'$C'}, {'$A'}, {'$A'}
1 @ {}, {}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}
1 @ {}, {}, {}, {'$C'}, {'$C'}, {'$B'}, {'$B'}, {'$A'}, {'$A'}
1 @ {}, {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}
1 @ {}, {}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}
1 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}
1 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {'$A'}
1 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$A'}
1 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$A'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {'$A'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {}, {'$A'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}
1 @ {}, {'$C', '$B'}, {}, {'$B', '$C'}, {}, {'$A'}
0 @ {}, {'$C', '$B'}, {}, {'$B', '$C'}, {}, {'$B'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {'$A'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {}, {'$A'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {}, {'$C'}, {}, {'$B'}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}
=
$A % PLACE, $B % OBJECT, $C % OBJECT
=
before going to the $A, get the $B and the $C in any order
get the $B and the $C to the $A
first get the $B then get the $C, or first get the $C then get the $B, then go to the $A
grab the $B then the $C, or $C then the $B, and go to the $A
once you get the $B and the $C visit the $A
bring the $B and the $C to the $A in any order
=
(.)* > ($B > (.)* > $C | $C > (.)* > $B) > (.)* > $A

0 @ {}, {}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}
0 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}
0 @ {}, {'$C'}, {}, {'$A'}, {}, {'$B'}
1 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {}
0 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {}
0 @ {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {}
0 @ {'$A'}, {'$B'}, {'$C'}, {}
1 @ {'$A'}, {'$B'}, {'$C'}, {}, {'$A'}, {'$B'}, {'$C'}, {}
0 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}
0 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}
0 @ {'$B'}, {'$A'}, {'$A'}
0 @ {'$A'}, {'$C'}, {'$B'}
0 @ {}, {'$B'}, {}, {'$A'}, {}, {'$A'}, {}
0 @ {}, {'$A'}, {}, {'$C'}, {}, {'$B'}, {}
=
$A % PLACE, $B % PLACE, $C % PLACE
=
Patrol the $A, $B, and $C in that order (start at the $A)
Circulate the $A, $B, and $C in that order (start at the $A)
Starting at the $A, circulate the $A, the $B, and the $C
First go to the $A, then to the $B, and finally to the $C, repeat
go to the $A then the $B then the $C and go back to the $A, repeat
Repeat the following: visit the $A, then go to the $B, then visit the $C
patrol around the $A, $B, and $C
=
((.)* > $A > (.)* > $B > (.)* > $C){#N}
=
Patrol the $A, $B, and $C in that order (start at the $C)

0 @ {}, {}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}
0 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}
0 @ {}, {'$C'}, {}, {'$A'}, {}, {'$B'}
1 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {}
0 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {}
0 @ {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {}
0 @ {'$A'}, {'$B'}, {'$C'}, {}
1 @ {'$A'}, {'$B'}, {'$C'}, {}, {'$A'}, {'$B'}, {'$C'}, {}
0 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}
0 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}
0 @ {'$B'}, {'$A'}, {'$A'}
0 @ {'$A'}, {'$C'}, {'$B'}
0 @ {}, {'$B'}, {}, {'$A'}, {}, {'$A'}, {}
0 @ {}, {'$A'}, {}, {'$C'}, {}, {'$B'}, {}
=
$A % PLACE, $B % PLACE, $C % PLACE
=
Patrol (#N) the $A, $B, and $C in that order (start at the $A)
Circulate the $A, $B, and $C #N in that order (start at the $A)
Starting at the $A, circulate the $A, the $B, and the $C #N
First go to the $A, then to the $B, and finally to the $C, repeat #N
go to the $A then the $B then the $C and go back to the $A, repeat #N
Repeat the following #N: visit the $A, then go to the $B, then visit the $C
patrol around the $A, $B, and $C #N
=
((.)* > $A > (.)* > $B > (.)* > $C){#N}
=
Patrol the $A, $B, and $C in that order (start at the $C)

0 @ {}, {}, {}
0 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}
1 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}
0 @ {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}
0 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {}
0 @ {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {}
=
$A % PLACE, $B % PLACE, $C % PLACE
=
Patrol the $A, $B, and $C in that order (start at the $B)
Starting at the $B, circulate the $A, the $B, and the $C
Circulate the $A, $B, and $C in that order (start at the $B)
=
((.)* > $B > (.)* > $C > (.)* > $A){#N}
=
Patrol the $A, $B, and $C in that order (start at the $C)

0 @ {}, {}, {}
0 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}
1 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}
0 @ {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}
0 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {}
0 @ {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {}
=
$A % PLACE, $B % PLACE, $C % PLACE
=
Patrol the $A, $B, and $C #N in that order (start at the $B)
Starting at the $B, circulate the $A, the $B, and the $C #N
Circulate the $A, $B, and $C in that order #N (start at the $B)
=
((.)* > $B > (.)* > $C > (.)* > $A){#N}
=
Patrol the $A, $B, and $C in that order (start at the $C)

0 @ {}, {}, {}
0 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}
0 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}
0 @ {}, {'$C'}, {}, {'$A'}, {}, {'$B'}
1 @ {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}
0 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {}
0 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {}
1 @ {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {}
=
$A % PLACE, $B % PLACE, $C % PLACE
=
Patrol the $A, $B, and $C in that order (start at the $C)
Starting at the $C, circulate the $A, the $B, and the $C
Circulate the $A, $B, and $C in that order (start at the $C)
=
((.)* > $C > (.)* > $A > (.)* > $B){#N}
=
Patrol the $A, $B, and $C in that order (start at the $C)

0 @ {}, {}, {}
0 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}
0 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}
0 @ {}, {'$C'}, {}, {'$A'}, {}, {'$B'}
1 @ {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}
0 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {}
0 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {}
1 @ {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {}
=
$A % PLACE, $B % PLACE, $C % PLACE
=
Patrol the $A, $B, and $C #N in that order (start at the $C)
Starting at the $C, circulate the $A, the $B, and the $C #N
Circulate the $A, $B, and $C in that order #N, start at the $C
=
((.)* > $C > (.)* > $A > (.)* > $B){#N}
=
Patrol the $A, $B, and $C in that order (start at the $C)

0 @ {}, {}, {}, {}
1 @ {}, {'$B'}, {}, {'$C'}, {}, {'$D'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$D'}
1 @ {}, {'$C', '$B'}, {}, {'$B', '$C'}, {}, {'$D'}
0 @ {}, {'$C', '$B'}, {}, {'$B', '$C'}, {}, {'$B'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$C'}, {}, {'$B'}, {}, {'$D'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$C'}, {}, {'$B'}, {}, {'$D'}, {}, {'$C'}, {}, {'$B'}, {}, {'$C'}, {}, {'$B'}, {}, {'$D'}, {}, {'$C'}, {}, {'$B'}, {}, {'$C'}, {}, {'$B'}, {}, {'$D'}
0 @ {}, {'$B'}, {'$A'}, {'$C'}, {}, {'$D'}
0 @ {'$A'}, {'$C'}, {}, {'$B'}, {}, {'$D'}
0 @ {}, {'$C', '$B'}, {}, {'$B', '$A', '$C'}, {}, {'$D'}
0 @ {}, {'$C'}, {}, {'$B'}, {}, {'$C'}, {}, {'$B'}, {'$A'}, {'$D'}
=
$A % HIT_A, $B % OBJECT, $C % OBJECT, $D % PLACE
=
never hit a $A. get the $B and the $C in any order to the $D
before going to the $D, get the $B and the $C in any order, but beware not to hit a $A
=
((.)* > $B > (.)* > $C > (.)* > $D | (.)* > $C > (.)* > $B > (.)* > $D) & (!$A)*
(((.)* > $B > (.)* > $C | (.)* > $C > (.)* > $B) > (.)* > $D) & (!$A)*
((((.)* > $B > (.)* > $C | (.)* > $C > (.)* > $B) > (.)*) & (.)* > $D) & (!$A)*
((.)* > $B > (.)* > $C > (.)* > $D | (.)* > $C > (.)* > $B > (.)* > $D) & ((.)* > $A > (.)*)~
((!$A)* > $B&!$A > (!$A)* > $C&!$A > (!$A)* > $D&!$A | (!$A)* > $C&!$A > (!$A)* > $B&!$A > (!$A)* > $D&!$A)

0 @ {}, {}, {}, {}
1 @ {}, {'$B'}, {}, {'$C'}, {}, {'$D'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$D'}
1 @ {}, {'$B'}, {}, {'$C'}, {}, {'$D'}, {'$B'}, {}, {'$C'}, {}, {'$D'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$D'}, {'$B'}, {}, {'$C'}, {}, {'$D'}
1 @ {}, {'$C', '$B'}, {}, {'$B', '$C'}, {}, {'$D'}
0 @ {}, {'$C', '$B'}, {}, {'$B', '$C'}, {}, {'$B'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$C'}, {}, {'$B'}, {}, {'$D'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$C'}, {}, {'$B'}, {}, {'$D'}, {}, {'$C'}, {}, {'$B'}, {}, {'$C'}, {}, {'$B'}, {}, {'$D'}, {}, {'$C'}, {}, {'$B'}, {}, {'$C'}, {}, {'$B'}, {}, {'$D'}
0 @ {}, {'$B'}, {'$A'}, {'$C'}, {}, {'$D'}
0 @ {'$A'}, {'$C'}, {}, {'$B'}, {}, {'$D'}
0 @ {}, {'$C', '$B'}, {}, {'$B', '$A', '$C'}, {}, {'$D'}
0 @ {}, {'$C'}, {}, {'$B'}, {}, {'$C'}, {}, {'$B'}, {'$A'}, {'$D'}
=
$A % AVOID, $B % NO_THE, $C % NO_THE, $D % PLACE
=
first get $B and $C (avoid the $A), and then bring them both to the $D
while avoiding the $A, bring $B and $C to the $D
first: get $B. second: get $C. third: carry them to the $D. but most most importantly avoid the $A
=
((.)* > $B > (.)* > $C > (.)* > $D | (.)* > $C > (.)* > $B > (.)* > $D) & (!$A)*
((((.)* > $B > (.)* > $C | (.)* > $C > (.)* > $B)) > (.)* > $D) & (!$A)*
(((((.)* > $B > (.)* > $C | (.)* > $C > (.)* > $B)) > (.)*) > $D) & (!$A)*
((.)* > $B > (.)* > $C > (.)* > $D | (.)* > $C > (.)* > $B > (.)* > $D) & ((.)* > $A > (.)*)~
((!$A)* > $B&!$A > (!$A)* > $C&!$A > (!$A)* > $D&!$A | (!$A)* > $C&!$A > (!$A)* > $B&!$A > (!$A)* > $D&!$A)

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$C'}, {}, {'$D'}, {}, {'$E'}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {}, {}, {}, {'$D'}, {}, {'$E'}, {'$C'}, {}, {'$D'}, {}, {}, {}, {}, {}
1 @ {}, {'$C'}, {}, {'$D'}, {}, {'$E'}, {}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$C'}, {'$D'}, {}, {'$E'}, {}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {'$A'}, {'$C'}, {}, {'$D'}, {}, {'$E'}, {}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {'$B'}, {'$C'}, {'$D'}, {}, {'$E'}, {}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$C'}, {}, {'$D'}, {}, {'$E'}, {'$A'}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$C'}, {'$D'}, {'$B'}, {'$E'}, {}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$C'}, {}, {'$D'}, {}, {'$E'}, {}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$C'}, {}, {'$D'}, {}, {'$E'}, {}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$C'}, {'$D'}, {}, {'$E'}, {}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$C'}, {}, {'$D'}, {}, {'$E'}, {}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {}
=
$A % AVOID, $B % AVOID, $C % PLACE, $D % PLACE, $E %PLACE
=
go to the $C, the $D, then the $E. finally, return to the $D. avoid the $A and the $B
Start from $C and find the $D. Then, find the $E. Finally, return to $D. Avoid the $A and the $B
=
(!$A&!$B)* > $C&!$A&!$B > (!$A&!$B)* > $D&!$A&!$B > (!$A&!$B)* > $E&!$A&!$B > (!$A&!$B)* > $D&!$A&!$B
((.)* > $C > (.)* > $D > (.)* > $E > (.)* > $D) & (!$A & !$B)*
((.)* > $C > (.)* > $D > (.)* > $E > (.)* > $D) & (!$A & !$B)+
((.)* > $C > (.)* > $D > (.)* > $E > (.)* > $D) & ((.)* > ($A | $B) > (.)*)~
=
never fall in a $A and avoid the $B. visit the $C then $D then $E. return to $D

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$C'}, {}, {'$D'}, {}, {'$E'}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {}, {}, {}, {'$D'}, {}, {'$E'}, {'$C'}, {}, {'$D'}, {}, {}, {}, {}, {}
1 @ {}, {'$C'}, {}, {'$D'}, {}, {'$E'}, {}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$C'}, {'$D'}, {}, {'$E'}, {}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {'$A'}, {'$C'}, {}, {'$D'}, {}, {'$E'}, {}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {'$B'}, {'$C'}, {'$D'}, {}, {'$E'}, {}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$C'}, {}, {'$D'}, {}, {'$E'}, {'$A'}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$C'}, {'$D'}, {'$B'}, {'$E'}, {}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$C'}, {}, {'$D'}, {}, {'$E'}, {}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$C'}, {}, {'$D'}, {}, {'$E'}, {}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$C'}, {'$D'}, {}, {'$E'}, {}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$C'}, {}, {'$D'}, {}, {'$E'}, {}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {}
=
$A % OBJECT_A, $B % OBJECT_A, $C % PLACE, $D % PLACE, $E %PLACE
=
go to the $C, the $D, then the $E. finally, return to the $D. avoid $As and $Bs
Start from $C and find the $D. Then, find the $E. Finally, return to $D. Avoid $As and $Bs
Start from $C and find the $D. Then, find the $E. Finally, return to $D. Don't get near $As and $Bs
=
(!$A&!$B)* > $C&!$A&!$B > (!$A&!$B)* > $D&!$A&!$B > (!$A&!$B)* > $E&!$A&!$B > (!$A&!$B)* > $D&!$A&!$B
((.)* > $C > (.)* > $D > (.)* > $E > (.)* > $D) & (!$A & !$B)*
((.)* > $C > (.)* > $D > (.)* > $E > (.)* > $D) & (!$A & !$B)+
((.)* > $C > (.)* > $D > (.)* > $E > (.)* > $D) & ((.)* > ($A | $B) > (.)*)~
=
never fall in a $A and avoid the $B. visit the $C then $D then $E. return to $D

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$C'}, {}, {'$D'}, {}, {'$E'}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {}, {}, {}, {'$D'}, {}, {'$E'}, {'$C'}, {}, {'$D'}, {}, {}, {}, {}, {}
1 @ {}, {'$C'}, {}, {'$D'}, {}, {'$E'}, {}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$C'}, {'$D'}, {}, {'$E'}, {}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {'$A'}, {'$C'}, {}, {'$D'}, {}, {'$E'}, {}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {'$B'}, {'$C'}, {'$D'}, {}, {'$E'}, {}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$C'}, {}, {'$D'}, {}, {'$E'}, {'$A'}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$C'}, {'$D'}, {'$B'}, {'$E'}, {}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$C'}, {}, {'$D'}, {}, {'$E'}, {}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$C'}, {}, {'$D'}, {}, {'$E'}, {}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$C'}, {'$D'}, {}, {'$E'}, {}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$C'}, {}, {'$D'}, {}, {'$E'}, {}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {}
=
$A % FALL_IN_A, $B % PLACE, $C % PLACE, $D % PLACE, $E %PLACE
$A % FALL_IN_A, $B % AREA, $C % PLACE, $D % PLACE, $E %PLACE
=
never fall in a $A and avoid the $B. visit the $C then $D then $E. return to $D
Start from $C and find the $D. Then, find the $E. Finally, return to $D. Don't fall in $As and avoid the $B
=
(!$A&!$B)* > $C&!$A&!$B > (!$A&!$B)* > $D&!$A&!$B > (!$A&!$B)* > $E&!$A&!$B > (!$A&!$B)* > $D&!$A&!$B
((.)* > $C > (.)* > $D > (.)* > $E > (.)* > $D) & (!$A & !$B)*
((.)* > $C > (.)* > $D > (.)* > $E > (.)* > $D) & (!$A & !$B)+
((.)* > $C > (.)* > $D > (.)* > $E > (.)* > $D) & ((.)* > ($A | $B) > (.)*)~
=
never fall in a $A and avoid the $B. visit the $C then $D then $E. return to $D

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$B'}, {'$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {'$A'}, {'$A', '$B'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {'$B'}, {'$A', '$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {'$B'}, {'$A', '$B'}, {'$B', '$A'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {'$B'}, {'$A', '$B'}, {'$B', '$A'}, {'$B'}, {'$B', '$A'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {'$B'}, {'$A', '$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {'$B'}, {'$A', '$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {'$B'}, {'$A', '$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
=
$A % PLACE, $B % AREA
=
find the $A in the $B
Enter the $B. In there, find the $A
Find the $A (it must be in the $B)
In the $B find the $A
=
(.)* > $A&$B
=
find the $A in the $B

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$B'}, {'$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {'$A'}, {'$A', '$B'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {'$A'}, {'$A', '$B'}, {'$A', '$B'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {'$B'}, {'$A', '$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {'$B'}, {'$A', '$B'}, {'$B', '$A'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {'$B'}, {'$A', '$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {'$B'}, {'$A', '$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {'$B'}, {'$A', '$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
=
$A % OBJECT, $B % AREA
=
find the $A in the $B
Enter the $B. In there, find the $A
Enter the $B and in there find the $A
Find the $A (it must be in the $B)
=
(.)* > $A&$B
=
find the $A in the $B

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$B'}, {'$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {'$A'}, {'$A', '$B'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {'$B'}, {'$A', '$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {'$B'}, {'$A', '$B'}, {'$B', '$A'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {'$B'}, {'$A', '$B'}, {'$B', '$A'}, {'$B'}, {'$B', '$A'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {'$B'}, {'$A', '$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {'$B'}, {'$A', '$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {'$B'}, {'$A', '$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
=
$A % PLACE, $B % AREA
=
find the $A in the $B without leaving it
Enter the $B and don't leave it. In there, find the $A
Find the $A (it must be in the $B, which you shouldn't leave when you enter it)
In the $B find the $A and don't leave $B
Navigate through the $B and in there, find the $A
=
(!$B)* > ($B)* > $A&$B
=
find the $A in the $B without leaving it

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$B'}, {'$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {'$A'}, {'$A', '$B'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {'$A'}, {'$A', '$B'}, {'$A', '$B'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {'$B'}, {'$A', '$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {'$B'}, {'$A', '$B'}, {'$B', '$A'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {'$B'}, {'$A', '$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {'$B'}, {'$A', '$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {'$B'}, {'$A', '$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
=
$A % OBJECT, $B % AREA
=
find the $A in the $B without leaving it
Enter the $B and don't leave it. In there, find the $A
Find the $A (it must be in the $B, which you shouldn't leave when you enter it)
In the $B find the $A and don't leave $B
Navigate through the $B and in there, find the $A
=
(!$B)* > ($B)* > $A&$B
=
find the $A in the $B without leaving it

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$B'}, {'$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {'$A'}, {'$A', '$B'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$B'}, {'$B'}, {'$A', '$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {'$A'}, {}, {}, {'$A', '$B'}, {'$A'}, {'$C'}, {'$C'}, {'$C', '$B'}, {'$C'}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {'$A'}, {}, {}, {'$A', '$B'}, {'$A'}, {'$C'}, {'$C'}, {'$C', '$B'}, {'$C'}, {'$C', '$B'}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {'$A'}, {}, {}, {'$A', '$B'}, {'$A'}, {'$C'}, {'$C'}, {'$C', '$B'}, {'$C', '$B'}, {'$C', '$B'}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {'$A'}, {}, {}, {'$A', '$B'}, {'$A'}, {'$C'}, {'$C'}, {'$C', '$B'}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {'$A'}, {}, {}, {'$A', '$B'}, {'$A'}, {'$C'}, {'$C'}, {'$C', '$B'}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {'$A'}, {}, {}, {'$A', '$B'}, {'$A'}, {'$C'}, {'$C'}, {'$C', '$B'}, {'$C'}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {'$A'}, {}, {}, {'$A', '$B'}, {'$A'}, {'$C'}, {'$C'}, {'$B'}, {'$C'}, {}, {}, {}, {}, {}, {}
=
$A % PLACE, $B % PLACE, $C % AREA
=
find the $A then find the $B in the $C
Go to the $C and find the $B, but not before finding the $A (doesn't have to be in the $C)
Find the $A wherever. Afterwards, find the $B in the $C
Go to the $A. Afterwards, find the $B in the $C
Find the $A. Then go to the $C. And in the $C, find the $B
Go to the $A. Then go to the $C. And in the $C, find the $B
Visit the $A and then find the $B in the $C
=
(.)* > $A > (.)* > ($B&$C)

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$B'}, {'$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {'$A'}, {'$A', '$B'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$B'}, {'$B'}, {'$A', '$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {'$A'}, {}, {}, {'$A', '$B'}, {'$A'}, {'$C'}, {'$C'}, {'$C', '$B'}, {'$C'}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {'$A'}, {}, {}, {'$A', '$B'}, {'$A'}, {'$C'}, {'$C'}, {'$C', '$B'}, {'$C'}, {'$C', '$B'}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {'$A'}, {}, {}, {'$A', '$B'}, {'$A'}, {'$C'}, {'$C'}, {'$C', '$B'}, {'$C', '$B'}, {'$C', '$B'}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {'$A'}, {}, {}, {'$A', '$B'}, {'$A'}, {'$C'}, {'$C'}, {'$C', '$B'}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {'$A'}, {}, {}, {'$A', '$B'}, {'$A'}, {'$C'}, {'$C'}, {'$C', '$B'}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {'$A'}, {}, {}, {'$A', '$B'}, {'$A'}, {'$C'}, {'$C'}, {'$C', '$B'}, {'$C'}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {'$A'}, {}, {}, {'$A', '$B'}, {'$A'}, {'$C'}, {}, {'$B'}, {'$C'}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {'$A'}, {}, {}, {'$A', '$B'}, {'$A'}, {'$C'}, {}, {'$C', '$B'}, {'$C'}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {'$A'}, {}, {}, {'$A', '$B'}, {'$A'}, {'$C'}, {}, {'$C', '$B'}, {'$C'}, {'$C', '$B'}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {'$A'}, {}, {}, {'$A', '$B'}, {'$A'}, {'$C'}, {'$C'}, {'$B'}, {'$C', '$B'}, {'$C', '$B'}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {'$A', '$C'}, {}, {}, {'$A', '$B'}, {'$A'}, {'$C'}, {'$C'}, {'$C', '$B'}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {'$A'}, {}, {}, {'$A', '$B'}, {'$A'}, {'$C'}, {'$C'}, {'$C', '$B'}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {'$A'}, {}, {}, {'$A', '$B'}, {'$A'}, {'$C'}, {'$C'}, {'$C', '$B'}, {'$C'}, {}, {}, {}, {}, {}, {}
=
$A % PLACE, $B % PLACE, $C % AREA
=
find the $A then find the $B in the $C without leaving it once you enter it
Go to the $C and don't leave it and find the $B, but not before finding the $A
Find the $A. Then, find the $B in the $C. After finding the $A and entering the $C, don't leave it
Visit the $A. Afterwards, find the $B in the $C, and don't leave $C (applies after finding the $A)
Find the $A. Then go to the $C and remain there. In the $C, find the $B
Go to the $A. Then go to the $C and don't leave it. And in the $C, find the $B
Visit the $A and then find the $B in the $C (that you mustn't leave)
=
(.)* > $A > (!$C)* > ($C)* > ($B&$C)
(.)* > $A > ((.)* > ($B&$C))&((!$C)* > ($C)*)

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$B'}, {'$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {'$A'}, {'$A', '$B'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$B'}, {'$B'}, {'$A', '$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {'$A'}, {}, {}, {'$A', '$B'}, {'$A'}, {'$C'}, {'$C'}, {'$C', '$B'}, {'$C'}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {'$A'}, {}, {}, {'$A', '$B'}, {'$A'}, {'$C'}, {'$C'}, {'$C', '$B'}, {'$C'}, {'$C', '$B'}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {'$A'}, {}, {}, {'$A', '$B'}, {'$A'}, {'$C'}, {'$C'}, {'$C', '$B'}, {'$C', '$B'}, {'$C', '$B'}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {'$A'}, {}, {}, {'$A', '$B'}, {'$A'}, {'$C'}, {'$C'}, {'$C', '$B'}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {'$A'}, {}, {}, {'$A', '$B'}, {'$A'}, {'$C'}, {'$C'}, {'$C', '$B'}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {'$A'}, {}, {}, {'$A', '$B'}, {'$A'}, {'$C'}, {'$C'}, {'$C', '$B'}, {'$C'}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {'$A'}, {}, {}, {'$A', '$B'}, {'$A'}, {'$C'}, {}, {'$B'}, {'$C'}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {'$A'}, {}, {}, {'$A', '$B'}, {'$A'}, {'$C'}, {}, {'$C', '$B'}, {'$C'}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {'$A'}, {}, {}, {'$A', '$B'}, {'$A'}, {'$C'}, {}, {'$C', '$B'}, {'$C'}, {'$C', '$B'}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {'$A'}, {}, {}, {'$A', '$B'}, {'$A'}, {'$C'}, {'$C'}, {'$B'}, {'$C', '$B'}, {'$C', '$B'}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {'$A', '$C'}, {}, {}, {'$A', '$B'}, {'$A'}, {'$C'}, {'$C'}, {'$C', '$B'}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {'$A'}, {}, {}, {'$A', '$B'}, {'$A'}, {'$C'}, {'$C'}, {'$C', '$B'}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {'$A'}, {}, {}, {'$A', '$B'}, {'$A'}, {'$C'}, {'$C'}, {'$C', '$B'}, {'$C'}, {}, {}, {}, {}, {}, {}
=
$A % PLACE, $B % PLACE, $C % AREA
=
find the $A outside of the $C then find the $B in the $C without leaving it once you enter it
Go to the $C and don't leave it and find the $B, but not before finding the $A (must be outside of the $C)
Find the $A before going to the $C. Then, find the $B in the $C. Never leave the $C once you enter it
Go to the $A that isn't in the $C. Afterwards, find the $B in the $C, and don't leave $C
Find the $A that isn't in the $C. Then go to the $C and remain there. In the $C, find the $B
Go to the $A that isn't in the $C. Then go to the $C and don't leave it. And in the $C, find the $B
Visit the $A (outside of the $C) and then find the $B in the $C (that you mustn't leave)
=
(!$C)* > $A&!$C > (!$C)* > ($C)* > ($B&$C)
((.)* > $A > (.)*)&(!$C)* > ($C)* > ($B&$C)
((.)* > $A > (.)*)&((.)* > $C > (.)*)~ > ($C)* > ($B&$C)

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}
0 @ {}, {'$B'}, {}, {'$B'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}
1 @ {}, {'$B'}, {}, {'$B'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {'$A'}, {}, {'$B'}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
1 @ {}, {'$A'}, {'$B'}, {'$B'}, {'$A'}, {'$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
1 @ {}, {'$B'}, {'$A'}, {'$B'}, {'$A'}, {'$B'}, {'$A'}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
1 @ {}, {'$A'}, {'$B'}, {'$A'}, {'$B'}, {'$A'}, {'$B'}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
1 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
0 @ {}, {'$B'}, {}, {'$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
=
$A % PLACE, $B % PLACE
=
Go to the $A then go to the $B
Find the $A then go to the $B
Go to the $A then visit the $B
Visit the $A then go to the $B
Visit the $A then visit the $B
Visit the $A then find the $B
Go to the $A (and after that go to the $B)
Visit the $A (and after that go to the $B)
Go to the $A (and after that visit the $B)
Go to the $B, but before that go to the $A
Go to the $B, but before that visit the $A
=
(.)* > $A > (.)* > $B
=
Find the $A then find the $B

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}
0 @ {}, {'$B'}, {}, {'$B'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}
1 @ {}, {'$B'}, {}, {'$B'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {'$A'}, {}, {'$B'}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
1 @ {}, {'$A'}, {'$B'}, {'$B'}, {'$A'}, {'$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
1 @ {}, {'$B'}, {'$A'}, {'$B'}, {'$A'}, {'$B'}, {'$A'}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
1 @ {}, {'$A'}, {'$B'}, {'$A'}, {'$B'}, {'$A'}, {'$B'}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
1 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
0 @ {}, {'$B'}, {}, {'$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
=
$A % OBJECT, $B % PLACE
=
Find the $A then go to the $B
Find the $A then visit the $B
Find the $A (and after that go to the $B)
Get the $A then go to the $B
Go get the $A then visit the $B
Get the $A (and after that go to the $B)
Get the $A (and after that find the $B)
Go to the $B, but before that find the $A
=
(.)* > $A > (.)* > $B
=
Find the $A then find the $B

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}
0 @ {}, {'$B'}, {}, {'$B'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}
1 @ {}, {'$B'}, {}, {'$B'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {'$A'}, {}, {'$B'}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
1 @ {}, {'$A'}, {'$B'}, {'$B'}, {'$A'}, {'$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
1 @ {}, {'$B'}, {'$A'}, {'$B'}, {'$A'}, {'$B'}, {'$A'}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
1 @ {}, {'$A'}, {'$B'}, {'$A'}, {'$B'}, {'$A'}, {'$B'}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
1 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
0 @ {}, {'$B'}, {}, {'$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
=
$A % PLACE, $B % OBJECT
=
Visit the $A then find the $B
Go to the $A then find the $B
Find the $A then find the $B
Go to the $A (and after that find the $B)
Visit the $A (and after that find the $B)
Find $B, but before that find the $A
Find $B, but before that visit the $A
Find $B, but before that go to the $A
=
(.)* > $A > (.)* > $B
=
Find the $A then find the $B

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}
0 @ {}, {'$B'}, {}, {'$B'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}
1 @ {}, {'$B'}, {}, {'$B'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {'$A'}, {}, {'$B'}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
1 @ {}, {'$A'}, {'$B'}, {'$B'}, {'$A'}, {'$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
1 @ {}, {'$B'}, {'$A'}, {'$B'}, {'$A'}, {'$B'}, {'$A'}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
1 @ {}, {'$A'}, {'$B'}, {'$A'}, {'$B'}, {'$A'}, {'$B'}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
1 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
0 @ {}, {'$B'}, {}, {'$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
=
$A % OBJECT, $B % OBJECT
=
Find the $A then go get the $B
Get the $A then go get the $B
Go get the $A then find the $B
Find the $A (and after that go get the $B)
Get the $B, but before that find the $A
Get the $B, but before that get the $A
=
(.)* > $A > (.)* > $B
=
Find the $A then find the $B

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
2 @ {}, {'$A'}, {'$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
5 @ {}, {'$A'}, {'$B'}, {'$B'}, {}, {}, {}, {}, {'$A'}, {}, {'$B'}, {'$A'}, {}, {}
=
$A % COLOR, $B % COLOR
=
Collect $A or $B objects in the room
Get $A or $B objects in the room
Find $A or $B objects
Collect every $A object and every $B object
Get every $A object and every $B object
Find every $A or $B object
Get every $A or $B object
=
((.)* > ($A | $B)){#N}
=
Collect $A or $B objects in the room

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
2 @ {}, {'$A'}, {'$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
5 @ {}, {'$A'}, {'$B'}, {'$B'}, {}, {}, {}, {}, {'$A'}, {}, {'$B'}, {'$A'}, {}, {}
=
$A % COLOR, $B % COLOR
=
Collect ##N $A or $B objects in the room
Get ##N $A or $B objects in the room
Find ##N $A or $B objects
Find $A or $B objects (##N of them)
Collect ##N $A or $B objects
Get ##N $A or $B objects
Find ##N $A or $B objects
Get a $A or $B object (##N times)
=
((.)* > ($A | $B)){##N}
=
Collect $A or $B objects in the room

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$C'}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$C'}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$C'}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$C'}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {'$C'}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$C'}, {'$A'}, {'$C'}, {}, {}, {}, {}
1 @ {'$A'}, {'$A'}, {'$A'}, {'$C'}, {}, {}, {}, {}, {}, {}
1 @ {'$A'}, {'$A'}, {'$A'}, {'$C'}, {'$D'}, {}, {}, {}, {}, {}
1 @ {'$A'}, {'$A'}, {'$A'}, {'$D'}, {'$C'}, {}, {}, {}, {}, {}, {}
1 @ {'$A'}, {'$A'}, {'$A'}, {'$C'}, {}, {}, {}, {}, {}, {}
1 @ {'$A'}, {'$A'}, {'$A'}, {'$C'}, {'$C'}, {}, {}, {}, {}, {}
1 @ {'$A'}, {'$A'}, {'$A'}, {'$D'}, {'$D'}, {}, {}, {}, {}, {}
1 @ {'$A'}, {'$A'}, {'$A'}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$D'}, {}, {}, {}, {}, {}, {}
0 @ {'$A'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}
0 @ {'$A'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {'$C'}
1 @ {'$A'}, {'$A'}, {'$A'}, {'$C'}, {'$A'}, {'$C'}, {}, {}, {}, {}
1 @ {'$A'}, {'$A'}, {'$A'}, {'$C'}, {'$A'}, {'$A'}, {'$A'}, {'$C'}, {'$A'}, {'$A'}, {'$A'}, {'$C'}
0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$D'}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$D'}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$D'}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$D'}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {'$D'}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$D'}, {'$A'}, {'$D'}, {}, {}, {}, {}
1 @ {'$A'}, {'$A'}, {'$A'}, {'$D'}, {}, {}, {}, {}, {}, {}
1 @ {'$A'}, {'$A'}, {'$A'}, {'$D'}, {}, {}, {}, {}, {}, {}
1 @ {'$A'}, {'$A'}, {'$A'}, {'$D'}, {}, {}, {}, {}, {}, {}
1 @ {'$A'}, {'$A'}, {'$A'}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$D'}, {}, {}, {}, {}, {}, {}
0 @ {'$A'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}
0 @ {'$A'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {'$D'}
1 @ {'$A'}, {'$A'}, {'$A'}, {'$D'}, {'$A'}, {'$D'}, {}, {}, {}, {}
1 @ {'$A'}, {'$A'}, {'$A'}, {'$D'}, {'$A'}, {'$A'}, {'$A'}, {'$D'}, {'$A'}, {'$A'}, {'$A'}, {'$D'}
=
$A % DIRECTION, $C % PLACE, $D % PLACE
$A % DIRECTION, $C % PLACE, $D % AREA
$A % DIRECTION, $C % AREA, $D % PLACE
$A % DIRECTION, $C % AREA, $D % AREA
=
Move $A until reaching a $C or a $D
Go $A until you get to the $C or $D
You can only ever go $A. Do that until you get to the $C or the $D.
Get to the $C or the $D by going only $A.
=
($A)* > ($C | $D)

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
2 @ {}, {}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}
3 @ {'$A'}, {}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}
2 @ {'$A'}, {'$A'}, {'$A'}
=
$A % COLLECTABLE
=
Pick up all the $As on the path
Collect all the $As
Get all the $As
Get as many $As as possible
Find $As
Get $As
=
((.)* > $A){#N}
=
Pick up all the $As on the path

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
2 @ {}, {}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}
3 @ {'$A'}, {}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}
2 @ {'$A'}, {'$A'}, {'$A'}
=
$A % COLLECTABLE
=
Pick up ##N $As on the path
Collect ##N $As
Get ##N $As
Find ##N $As
Get ##N $As
=
((.)* > $A){##N}
=
Pick up all the $As on the path

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {}, {'$A'}, {}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
2 @ {}, {}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}
3 @ {'$A'}, {}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}
2 @ {'$A'}, {'$A'}, {'$A'}
0 @ {}, {}, {'$A'}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {}, {'$A'}, {}, {'$A'}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$B'}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {}, {'$A', '$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}
1 @ {'$A'}, {}, {'$A'}, {'$B'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}
2 @ {'$A'}, {'$A'}, {'$A'}, {'$B'}
=
$A % COLLECTABLE, $B % AVOID
=
Pick up all the $As on the path while avoiding the $B
Collect the $As and avoid the $B
Find the $As and avoid the $B
Get the $As, and avoid the $B
Get as many $As as possible (avoid the $B)
=
((.)* > $A){#N} & (!$B)*
((.)* > $A){#N} & ((.)* > $B > (.)*)~
((!$B)* > $A&!$B){#N}
=
Pick up all the $As on the path while avoiding $Bs

2 @ {'$A'}, {'$A'}, {'$A'}, {'$B'}
=
$A % COLLECTABLE, $B % OBJECT_A
=
Pick up all the $As on the path while avoiding $Bs
Collect the $As and avoid all $Bs
Find the $As and avoid all $Bs
Get the $As, and avoid $Bs
Get as many $As as possible (avoid $Bs)
=
((.)* > $A){#N} & (!$B)*
((.)* > $A){#N} & ((.)* > $B > (.)*)~
((!$B)* > $A&!$B){#N}
=
Pick up all the $As on the path while avoiding $Bs

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
2 @ {}, {}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
3 @ {}, {}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}
4 @ {'$A'}, {}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}
3 @ {'$A'}, {'$A'}, {'$A'}
1 @ {}, {'$A'}, {'$A'}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {}, {'$A'}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$B'}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {}, {'$A', '$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}
2 @ {'$A'}, {}, {'$A'}, {'$B'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}
3 @ {'$A'}, {'$A'}, {'$A'}, {'$B'}
=
$A % COLLECTABLE, $B % STEP_ON_A
=
Pick up the $As on the path while not stepping on $Bs
Collect $As and never step on any $Bs
Get all the $As, and don't step on a $B
Find $As, and don't step on a $B
Get as many $As as possible (don't step on $Bs)
=
((.)* > $A){#N} & (!$B)*
((.)* > $A){#N} & ((.)* > $B > (.)*)~
((!$B)* > $A&!$B){#N}
=
Pick up all the $As on the path while avoiding $Bs

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
2 @ {}, {}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
3 @ {}, {}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}
4 @ {'$A'}, {}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}
3 @ {'$A'}, {'$A'}, {'$A'}
1 @ {}, {'$A'}, {'$A'}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {}, {'$A'}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$B'}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {}, {'$A', '$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}
2 @ {'$A'}, {}, {'$A'}, {'$B'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}
3 @ {'$A'}, {'$A'}, {'$A'}, {'$B'}
=
$A % COLLECTABLE, $B % HIT_A
=
Pick up the $As on the path while not hitting $Bs
Collect all the $As and never hit any $Bs
Get all the $As, and be careful not to hit a $B
Find $As, and be careful not to hit a $B
Get as many $As as possible (don't hit a $B)
=
((.)* > $A){#N} & (!$B)*
((.)* > $A){#N} & ((.)* > $B > (.)*)~
((!$B)* > $A&!$B){#N}
=
Pick up all the $As on the path while avoiding $Bs

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {}, {'$A', '$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {}, {'$A', '$B'}, {}, {'$A', '$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
3 @ {}, {}, {'$A', '$B'}, {}, {'$A', '$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A', '$B'}
4 @ {'$A', '$B'}, {}, {'$A', '$B'}, {}, {'$A', '$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A', '$B'}
3 @ {'$A', '$B'}, {'$A', '$B'}, {'$A', '$B'}
0 @ {}, {}, {'$A', '$C'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {}, {'$A', '$B'}, {}, {'$A', '$C'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {}, {'$A', '$B'}, {}, {'$A', '$C'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A', '$B'}, {}, {'$A', '$C'}, {}
2 @ {}, {}, {'$A', '$C'}, {}, {'$A', '$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A', '$B'}
3 @ {'$A', '$B'}, {}, {'$A', '$B'}, {}, {'$A', '$C'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A', '$B'}
2 @ {'$A', '$C'}, {'$A', '$B'}, {'$A', '$B'}
0 @ {}, {}, {'$A', '$C'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {}, {'$A', '$C'}, {}, {'$A', '$C'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {}, {'$A', '$C'}, {}, {'$A', '$C'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A', '$C'}
0 @ {'$A', '$C'}, {}, {'$A', '$C'}, {}, {'$A', '$C'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A', '$C'}
0 @ {'$A', '$C'}, {'$A', '$C'}, {'$A', '$C'}
=
$A % COLLECTABLE, $B % COLOR, $C % COLOR
=
Pick up all the $B $As
Collect all the $B $As
Find $B $As
Get $B $As
Get all the $B $As
Get as many $B $As as possible
=
((.)* > $A&$B){#N}

0 @ {}, {}, {}
0 @ {}, {'$A'}, {}
0 @ {}, {'$A'}, {}, {'$B'}
0 @ {}, {'$A'}, {'$A'}, {'$B'}
1 @ {}, {'$A'}, {'$A'}, {'$A', '$B'}
0 @ {}, {'$A'}, {'$A'}, {}, {'$A', '$B'}
1 @ {}, {'$A'}, {'$A'}, {'$A', '$B'}, {'$A', '$B'}, {'$A', '$B'}
1 @ {}, {'$A'}, {'$A'}, {'$A', '$B'}, {'$A'}, {'$A'}, {'$A', '$B'}, {'$A'}, {'$A'}, {'$A', '$B'}, {'$A'}
=
$A % AREA, $B % OBJECT_A
=
Reach the $A and get a $B
=
(.)* > $A > ($A)* > $A&$B
(.)* > ($A)+ > $A&$B
=
Reach the lake and catch a fish

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {'$B'}, {'$B'}, {'$A', '$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {'$B'}, {}, {'$B'}, {'$A', '$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {'$B'}, {'$B'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}
=
$A % PLACE, $B % DIRECTION
$A % AREA, $B % DIRECTION
=
Visit the $A by going $B
Always go $B. Visit the $A
Always go $B and go to the $A
Always go $B. Go to the $A
Get to $A and never stop going $B
Go to the $A, but never stop going $B
=
($B)* > $A&$B
((.)* > $A) & ($B)*
((.)* > $A) & ((.)* > !$B > (.)*)~

0 @ {}, {}, {}, {}
0 @ {'$A'}, {'$B'}, {'$C'}
1 @ {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}
0 @ {'$A'}, {'$B'}, {'$C'}, {'$C'}
1 @ {'$A'}, {'$B'}, {'$C'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {'$C'}
0 @ {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}
1 @ {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}, {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}
0 @ {'$A'}, {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}
1 @ {'$A'}, {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}, {'$A'}, {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}
0 @ {'$C'}, {'$B'}, {'$A'}
1 @ {'$C'}, {'$B'}, {'$A'}, {'$C'}, {'$B'}, {'$A'}
0 @ {'$C'}, {'$B'}, {'$A'}, {'$A'}
1 @ {'$C'}, {'$B'}, {'$A'}, {'$A'}, {'$C'}, {'$B'}, {'$A'}, {'$A'}
0 @ {'$C'}, {'$B'}, {'$B'}, {'$A'}, {'$A'}
1 @ {'$C'}, {'$B'}, {'$B'}, {'$A'}, {'$A'}, {'$C'}, {'$B'}, {'$B'}, {'$A'}, {'$A'}
0 @ {'$C'}, {'$C'}, {'$B'}, {'$B'}, {'$A'}, {'$A'}
1 @ {'$C'}, {'$C'}, {'$B'}, {'$B'}, {'$A'}, {'$A'}, {'$C'}, {'$C'}, {'$B'}, {'$B'}, {'$A'}, {'$A'}
0 @ {}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}
1 @ {}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {} 
0 @ {}, {}, {'$B'}, {}, {'$B'}, {}, {'$C'}, {} 
0 @ {}, {}, {'$B'}, {}, {'$B'}, {}, {'$B'}, {} 
0 @ {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {} 
0 @ {}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {} 
1 @ {}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {}
0 @ {}, {}, {'$C'}, {'$C'}, {}, {'$B'}, {'$B'}, {}, {'$A'}, {'$A'}, {}
1 @ {}, {}, {'$C'}, {'$C'}, {}, {'$B'}, {'$B'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {'$C'}, {'$C'}, {}, {'$B'}, {'$B'}, {}, {'$A'}, {'$A'}, {}
0 @ {}, {}, {'$A'}, {'$C'}, {}, {'$B'}, {}, {}, {}, {}, {}
0 @ {}, {}, {'$A'}, {'$C'}, {}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {'$C'}, {}, {'$B'}, {}, {}, {}, {}, {}
=
$A % PLACE, $B % PLACE, $C % PLACE
=
Patrol the $A, $B, and $C either from the $A to the $C or from the $C to the $A
Patrol the $A, $B, and $C front to back
Starting from the $A or the $C, circle the $A, $B, and $C
=
((.)* > $A > (.)* > $B > (.)* > $C | (.)* > $C > (.)* > $B > (.)* > $A){#N}

0 @ {}, {}, {}, {}
0 @ {'$A'}, {'$B'}, {'$C'}
1 @ {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}
0 @ {'$A'}, {'$B'}, {'$C'}, {'$C'}
1 @ {'$A'}, {'$B'}, {'$C'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {'$C'}
0 @ {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}
1 @ {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}, {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}
0 @ {'$A'}, {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}
1 @ {'$A'}, {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}, {'$A'}, {'$A'}, {'$B'}, {'$B'}, {'$C'}, {'$C'}
0 @ {'$C'}, {'$B'}, {'$A'}
1 @ {'$C'}, {'$B'}, {'$A'}, {'$C'}, {'$B'}, {'$A'}
0 @ {'$C'}, {'$B'}, {'$A'}, {'$A'}
1 @ {'$C'}, {'$B'}, {'$A'}, {'$A'}, {'$C'}, {'$B'}, {'$A'}, {'$A'}
0 @ {'$C'}, {'$B'}, {'$B'}, {'$A'}, {'$A'}
1 @ {'$C'}, {'$B'}, {'$B'}, {'$A'}, {'$A'}, {'$C'}, {'$B'}, {'$B'}, {'$A'}, {'$A'}
0 @ {'$C'}, {'$C'}, {'$B'}, {'$B'}, {'$A'}, {'$A'}
1 @ {'$C'}, {'$C'}, {'$B'}, {'$B'}, {'$A'}, {'$A'}, {'$C'}, {'$C'}, {'$B'}, {'$B'}, {'$A'}, {'$A'}
0 @ {}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}
1 @ {}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {} 
0 @ {}, {}, {'$B'}, {}, {'$B'}, {}, {'$C'}, {} 
0 @ {}, {}, {'$B'}, {}, {'$B'}, {}, {'$B'}, {} 
0 @ {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {} 
0 @ {}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {} 
1 @ {}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {}
0 @ {}, {}, {'$C'}, {'$C'}, {}, {'$B'}, {'$B'}, {}, {'$A'}, {'$A'}, {}
1 @ {}, {}, {'$C'}, {'$C'}, {}, {'$B'}, {'$B'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {'$C'}, {'$C'}, {}, {'$B'}, {'$B'}, {}, {'$A'}, {'$A'}, {}
0 @ {}, {}, {'$A'}, {'$C'}, {}, {'$B'}, {}, {}, {}, {}, {}
0 @ {}, {}, {'$A'}, {'$C'}, {}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {'$C'}, {}, {'$B'}, {}, {}, {}, {}, {}
=
$A % PLACE, $B % PLACE, $C % PLACE
=
Patrol the $A, $B, and $C #N either from the $A to the $C or from the $C to the $A
Patrol the $A, $B, and $C either from the $A to the $C or from the $C to the $A #N
Patrol the $A, $B, and $C #N front to back
Patrol the $A, $B, and $C front to back #N
Starting from the $A or the $C, circle the $A, $B, and $C #N
=
((.)* > $A > (.)* > $B > (.)* > $C | (.)* > $C > (.)* > $B > (.)* > $A){#N}
