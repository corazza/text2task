1 @ {'left'}, {'right'}, {'up'}
=
left % down, right % left, up % down
left % down, right % left, up % left
left % down, right % left, up % right
=
go left once, then right once, then up
go left, right, then up (but only once each time)
go left, right, then up (but only once)
=
left > right > up

1 @ {}
2 @ {}, {}
0 @ {'A'}, {'A'}
1 @ {}, {'A'}
1 @ {}, {'A'}, {}, {}, {}, {}
=
A % bakery, do A % go to the bakery
A % bakery, do A % visit the bakery
A % library, do A % go to the library
A % library, do A % visit the library
A % office, do A % go to the office
A % office, do A % visit the office
A % jump, do A % jump
=
never do A
=
(!A)*

3 @ {}, {'office'}, {'office'}, {'office', 'jump'}, {'office'}, {'office'}, {}, {}
3 @ {}, {'office'}, {'office'}, {'office', 'jump'}, {'office'}, {'office'}
3 @ {}, {'office'}, {'office'}, {'office', 'jump'}
5 @ {}, {'office'}, {}, {'office'}, {}, {'office', 'jump'}
5 @ {}, {'office'}, {}, {'office'}, {}, {'office', 'jump'}, {}
3 @ {}, {'office'}, {'office'}, {'office', 'jump'}, {}
1 @ {}, {'office', 'jump'}, {}
0 @ {'office', 'jump'}
0 @ {'office', 'jump'}, {'office', 'jump'}, {'office', 'jump'}, {'office', 'jump'}
4 @ {}, {}, {'jump'}, {'office'}
=
office % goldmine
office % goldmine, jump % yell, start jumping % start yelling
=
never stand around the office and then start jumping
do not jump in the office
no jumping allowed in the office
=
(!office | office&!jump)*
((.)* > (office&jump) > (.)*)~

0 @ {}
0 @ {}, {}, {'A'}
1 @ {'A'}
2 @ {'A'}, {'A'}
=
A % goldmine, always do A % stay in the goldmine
=
always do A
do A at least once
=
(A)+

0 @ {}, {}, {}, {}
1 @ {}, {}, {'forest'}, {}, {'forest'}
1 @ {}, {}, {'forest'}, {'forest'}
=
forest % office
forest % goldmine
forest % mountain
forest % ocean
forest % sea
forest % break room
forest % space station
=
go to the forest
visit the forest
=
(!forest)* > forest

0 @ {}, {}, {}, {}
1 @ {}, {}, {'forest'}, {}
1 @ {}, {}, {'forest'}, {}, {'forest'}
2 @ {}, {}, {'forest'}, {'forest'}
=
forest % office
forest % goldmine
forest % mountain
forest % ocean
forest % sea
forest % break room
forest % space station
=
go to the forest
visit the forest
=
(!forest)* > (forest)+


0 @ {}, {}, {}, {}
0 @ {}, {}, {'door'}, {}, {'secret'}
0 @ {}, {}, {'door'}, {'secret'}
0 @ {}, {}, {'door'}, {}, {'door', 'secret'}
0 @ {}, {}, {'door'}, {}, {'door', 'secret'}, {'enemy'}
0 @ {}, {}, {'door'}, {}, {'door', 'secret'}, {'base'}
1 @ {}, {}, {'door'}, {}, {'door', 'secret'}, {'enemy', 'base'}, {'enemy', 'base'}, {'enemy', 'base'}, {'enemy', 'base', 'documents', 'secret'}, {}, {}, {'friendly', 'base'}
0 @ {}, {}, {'door'}, {}, {'door', 'secret'}, {'enemy', 'base'}, {'enemy', 'base'}, {'enemy', 'base'}, {'enemy', 'base', 'documents', 'secret'}, {}, {'detected'}, {}, {'friendly', 'base'}
=
=
You must infiltrate the enemy base. To do this, you must find the secret door without being detected. Once inside, find the secret documents. Finally, bring the secret documents back to our base.
First find the secret door to the enemy base. In there, get the secret documents and bring them back to our base. Don't get detected!
This is a stealth mission to find the secret enemy documents. Infiltrate their base through the secret door, and bring them back to ours. You better not get detected.
This task is failed by detection. Infiltrate the enemy base (find the secret entrance) and then return to the friendly base.
=
((.)* > door&secret > (enemy&base)+ > enemy&base&documents&secret > (.)* > friendly&base) & (!detected)*


0 @ {}, {}
0 @ {}, {}, {'goldmine'}, {'rock'}, {}
0 @ {}, {}, {'goldmine'}, {}, {'rock'}, {'goldmine'}, {'rock'}, {}
0 @ {}, {}, {'goldmine'}, {'rock'}, {}
1 @ {}, {}, {'goldmine'}, {}, {'rock', 'goldmine'}
1 @ {}, {}, {'goldmine'}, {'rock'}, {'rock', 'goldmine'}
1 @ {}, {}, {'goldmine'}, {'rock', 'goldmine'}
1 @ {}, {}, {'goldmine'}, {'goldmine'}, {'rock', 'goldmine'}
2 @ {}, {}, {'goldmine'}, {'goldmine'}, {'rock', 'goldmine'}, {'rock'}, {'rock', 'goldmine'}, 
2 @ {}, {}, {'goldmine'}, {'goldmine'}, {'rock', 'goldmine'}, {'rock', 'goldmine'}
2 @ {}, {}, {'goldmine'}, {'goldmine'}, {'rock', 'goldmine'}, {'goldmine'}, {'rock', 'goldmine'}
=
goldmine % parking lot, gold mine % parking lot, rock samples % empty cans, rock % empty_can
goldmine % silver mine, gold mine % silver mine, rock samples % silver ore, rock % silver ore
=
Go to the gold mine and gather rock samples
We need rock samples from the goldmine
Once you get to the goldmine gather rock samples
Find rock samples from the goldmine
=
(.)* > ((goldmine)* > rock&goldmine)+
(.)* > (goldmine)* > rock&goldmine > ((goldmine)* > rock&goldmine)*

0 @ {}, {}
0 @ {}, {}, {'goldmine'}, {'rock'}, {}
0 @ {}, {}, {'goldmine'}, {}, {'rock'}, {'goldmine'}, {'rock'}, {}
0 @ {}, {}, {'goldmine'}, {'rock'}, {}
1 @ {}, {}, {'goldmine'}, {}, {'rock', 'goldmine'}
0 @ {}, {}, {'goldmine'}, {'rock'}, {'rock', 'goldmine'}
1 @ {}, {}, {'goldmine'}, {'rock', 'goldmine'}
1 @ {}, {}, {'goldmine'}, {'goldmine'}, {'rock', 'goldmine'}
1 @ {}, {}, {'goldmine'}, {'goldmine'}, {'rock', 'goldmine'}, {'rock'}, {'rock', 'goldmine'}, 
2 @ {}, {}, {'goldmine'}, {'goldmine'}, {'rock', 'goldmine'}, {'rock', 'goldmine'}
2 @ {}, {}, {'goldmine'}, {'goldmine'}, {'rock', 'goldmine'}, {'goldmine'}, {'rock', 'goldmine'}
=
goldmine % parking lot, gold mine % parking lot, rock samples % empty cans, rock % empty_can, rocks % cans
goldmine % silver mine, gold mine % silver mine, rock samples % silver ore, rock % silver ore, rocks % silver ore samples
=
Go to the gold mine and gather rock samples, without leaving the goldmine.
Go to the goldmine and avoid any rocks on the way there. In the gold mine, collect rock samples.
There are many rocks in the goldmine. Go and collect them, but on the way to the goldmine avoid the rocks.
=
(!rock)* > ((goldmine)* > rock&goldmine)+

0 @ {}, {}, {}, {}
1 @ {}, {'coffee'}, {}, {'mail'}, {}, {'office'}
1 @ {}, {'mail'}, {}, {'coffee'}, {}, {'office'}
1 @ {}, {'mail', 'coffee'}, {}, {'coffee', 'mail'}, {}, {'office'}
0 @ {}, {'mail', 'coffee'}, {}, {'coffee', 'mail'}, {}, {'coffee'}
1 @ {}, {'mail'}, {}, {'coffee'}, {}, {'mail'}, {}, {'coffee'}, {}, {'office'}
=
coffee % food, mail % tools, office % building
coffee % ammunition, mail % charger, office % base
coffee % tire, mail % pump, office % garage
=
Grab the coffee and mail and bring them to the office.
Bring coffee and mail to the office.
Bring mail and coffee to the office.
Go to the office, but don't forget coffee and mail
Go to the office, but don't forget mail and coffee
get some coffee! get the mail! bring them to the office
would you please bring coffee and the mail to the office?
=
((.)* > coffee > (.)* > mail | (.)* > mail > (.)* > coffee) > (.)* > office

0 @ {}, {}, {}
1 @ {}, {'base_1'}, {}, {'base_2'}, {}, {'base_3'}
0 @ {}, {'base_2'}, {}, {'base_3'}, {}, {'base_1'}
0 @ {}, {'base_3'}, {}, {'base_1'}, {}, {'base_2'}
1 @ {}, {'base_2'}, {}, {'base_3'}, {}, {'base_1'}, {}, {'base_2'}, {}, {'base_3'}, {}
=
=
Visit the first base, second base, and third base in that order
Visit the base_1, base_2, and base_3 in that order
Visit the base 1, base 2, and base 3 in that order
=
(.)* > base_1 > (.)* > base_2 > (.)* > base_3
(.)+ > base_1 > (.)+ > base_2 > (.)+ > base_3

0 @ {}, {}, {}
1 @ {}, {'base_1'}, {}, {'base_2'}, {}, {'base_3'}
1 @ {}, {'base_2'}, {}, {'base_3'}, {}, {'base_1'}
1 @ {}, {'base_3'}, {}, {'base_1'}, {}, {'base_2'}
1 @ {}, {'base_2'}, {}, {'base_3'}, {}, {'base_1'}, {}, {'base_2'}, {}, {'base_3'}, {}
=
=
Visit the first base, the second base, and the third base. Start from any of them, but respect that order.
=
(!base_2&!base_3)* > base_1 > (!base_1&!base_3)* > base_2 > (!base_1&!base_2)* > base_3 | (!base_1&!base_3)* > base_2 > (!base_1&!base_2)* > base_3 > (!base_2&!base_3)* > base_1 | (!base_1&!base_2)* > base_3 > (!base_1&!base_3)* > base_1 > (!base_1&!base_3)* > base_2

0 @ {}, {}, {}
1 @ {}, {'base_1'}, {}, {'base_2'}, {}, {'base_3'}
0 @ {}, {'base_2'}, {}, {'base_3'}, {}, {'base_1'}
0 @ {}, {'base_3'}, {}, {'base_1'}, {}, {'base_2'}
2 @ {}, {'base_1'}, {}, {'base_2'}, {}, {'base_3'}, {}, {'base_1'}, {}, {'base_2'}, {}, {'base_3'}, {}, {}
0 @ {}, {'base_2'}, {}, {'base_3'}, {}, {'base_1'}, {}, {'base_2'}, {}, {'base_3'}, {}, {'base_1'}, {}, {}
0 @ {}, {'base_3'}, {}, {'base_1'}, {}, {'base_2'}, {}, {'base_3'}, {}, {'base_1'}, {}, {'base_2'}, {}, {}
=
=
Patrol the first base, second base, and third base in that order (start at base one)
Patrol the three bases in order 1, 2, and 3 (beginning at 1)
=
((!base_2&!base_3)* > base_1 > (!base_1&!base_3)* > base_2 > (!base_1&!base_2)* > base_3)+
((!base_2&!base_3)+ > base_1 > (!base_1&!base_3)+ > base_2 > (!base_1&!base_2)+ > base_3)+

0 @ {}, {}, {}
1 @ {}, {'base_1'}, {}, {'base_2'}, {}, {'base_3'}
1 @ {}, {'base_2'}, {}, {'base_3'}, {}, {'base_1'}
1 @ {}, {'base_3'}, {}, {'base_1'}, {}, {'base_2'}
2 @ {}, {'base_1'}, {}, {'base_2'}, {}, {'base_3'}, {}, {'base_1'}, {}, {'base_2'}, {}, {'base_3'}, {}, {}
2 @ {}, {'base_2'}, {}, {'base_3'}, {}, {'base_1'}, {}, {'base_2'}, {}, {'base_3'}, {}, {'base_1'}, {}, {}
2 @ {}, {'base_3'}, {}, {'base_1'}, {}, {'base_2'}, {}, {'base_3'}, {}, {'base_1'}, {}, {'base_2'}, {}, {}
=
=
Patrol the first base, second base, and third base, starting from any of them. Cycle them.
Patrol the three bases in order 1, 2, and 3 starting from any of them.
=
((!base_2&!base_3)* > base_1 > (!base_1&!base_3)* > base_2 > (!base_1&!base_2)* > base_3)+ | ((!base_1&!base_3)* > base_2 > (!base_1&!base_2)* > base_3 > (!base_2&!base_3)* > base_1)+ | ((!base_1&!base_2)* > base_3 > (!base_2&!base_3)* > base_1 > (!base_1&!base_3)* > base_2)+
((!base_2&!base_3)+ > base_1 > (!base_1&!base_3)+ > base_2 > (!base_1&!base_2)+ > base_3)+ | ((!base_1&!base_3)+ > base_2 > (!base_1&!base_2)+ > base_3 > (!base_2&!base_3)+ > base_1)+ | ((!base_1&!base_2)+ > base_3 > (!base_2&!base_3)+ > base_1 > (!base_1&!base_3)+ > base_2)+

0 @ {}, {}, {}
1 @ {'$A'}, {'$B'}, {'$C'}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}
2 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}
3 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}
0 @ {'$B'}, {'$A'}, {'$A'}
0 @ {'$A'}, {'$C'}, {'$B'}
0 @ {}, {'$B'}, {}, {'$A'}, {}, {'$A'}, {}
0 @ {}, {'$A'}, {}, {'$C'}, {}, {'$B'}, {}
1 @ {}, {}, {'$A'}, {'$A'}, {}, {'$B'}, {'$B'}, {}, {}, {}, {}, {'$C'}, {'$C'}, {'$C'}, {}
1 @ {}, {}, {'$A'}, {'$A'}, {}, {'$B'}, {'$B'}, {'$B'}, {'$B'}, {}, {'$C'}, {'$C'}, {}, {'$C'}, {}
=
$A % base, $B % hospital, $C % field
$A % hospital, $B % base, $C % field
$A % field, $B % base, $C % hospital
$A % camp, $B % building, $C % forest
=
Patrol the $A, the $B, and the $C
Circulate the $A, the $B, and the $C
First go to the $A, then to the $B, and finally to the $C. Repeat
Repeat the following: $A, $B, then $C
go to the $A then the $B then the $C and go back to the $A, repeat
patrol around the $A, $B, and $C
=
((!$A&!$B&!$C)* > ($A)+ > (!$A&!$B&!$C)* > ($B)+ > (!$A&!$B&!$C)* > ($C)+ > !$C)+

0 @ {}, {}, {}
1 @ {'$A'}, {'$B'}, {'$C'}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}
2 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}
3 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}
0 @ {'$B'}, {'$A'}, {'$A'}
0 @ {'$A'}, {'$C'}, {'$B'}
0 @ {}, {'$B'}, {}, {'$A'}, {}, {'$A'}, {}
0 @ {}, {'$A'}, {}, {'$C'}, {}, {'$B'}, {}
1 @ {}, {}, {'$A'}, {'$A'}, {}, {'$B'}, {'$B'}, {}, {}, {}, {}, {'$C'}, {'$C'}, {'$C'}, {}
1 @ {}, {}, {'$A'}, {'$A'}, {}, {'$B'}, {'$B'}, {'$B'}, {'$B'}, {}, {'$C'}, {'$C'}, {}, {'$C'}, {}
=
$A % the base, $B % the hospital, $C % the field
$A % the hospital, $B % the base, $C % the field
$A % the field, $B % the base, $C % the hospital
$A % the camp, $B % the building, $C % the forest
$A % the garage, $B % the building, $C % the office
=
Repeat the following: $A, $B, then $C
Repeat the following: $A, then $B, then $C
Do $A, $B, then $C
=
((!$A&!$B&!$C)* > ($A)+ > (!$A&!$B&!$C)* > ($B)+ > (!$A&!$B&!$C)* > ($C)+ > !$C)+

0 @ {}, {}, {}, {}
1 @ {}, {'$B'}, {}, {'$C'}, {}, {'$D'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$D'}
1 @ {}, {'$C', '$B'}, {}, {'$B', '$C'}, {}, {'$D'}
0 @ {}, {'$C', '$B'}, {}, {'$B', '$C'}, {}, {'$B'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$C'}, {}, {'$B'}, {}, {'$D'}
0 @ {}, {'$B'}, {'$A'}, {'$C'}, {}, {'$D'}
0 @ {'$A'}, {'$C'}, {}, {'$B'}, {}, {'$D'}
0 @ {}, {'$C', '$B'}, {}, {'$B', '$A', '$C'}, {}, {'$D'}
0 @ {}, {'$C'}, {}, {'$B'}, {}, {'$C'}, {}, {'$B'}, {'$A'}, {'$D'}
=
$A % trap, $B % petrol, $C % tools, $D % base
$A % mine, $B % the person, $C % equipment, $D % base
$A % pedestrian, $B % the key, $C % food, $D % building
=
never hit a $A. get $B and the $C in any order to the $D
before going to the $D, get $B and $C in any order, but beware not to hit a $A
=
((.)* > $B > (.)* > $C > (.)* > $D | (.)* > $C > (.)* > $B > (.)* > $D) & (!$A)*
((.)* > $B > (.)* > $C > (.)* > $D | (.)* > $C > (.)* > $B > (.)* > $D) & ((.)* > $A > (.)*)~
((!$A)* > $B&!$A > (!$A)* > $C&!$A > (!$A)* > $D&!$A | (!$A)* > $C&!$A > (!$A)* > $B&!$A > (!$A)* > $D&!$A)

0 @ {}, {}, {}, {}
1 @ {}, {'$B'}, {}, {'$C'}, {}, {'$D'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$D'}
1 @ {}, {'$C', '$B'}, {}, {'$B', '$C'}, {}, {'$D'}
0 @ {}, {'$C', '$B'}, {}, {'$B', '$C'}, {}, {'$B'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$C'}, {}, {'$B'}, {}, {'$D'}
0 @ {}, {'$B'}, {'$A'}, {'$C'}, {}, {'$D'}
0 @ {'$A'}, {'$C'}, {}, {'$B'}, {}, {'$D'}
0 @ {}, {'$C', '$B'}, {}, {'$B', '$A', '$C'}, {}, {'$D'}
0 @ {}, {'$C'}, {}, {'$B'}, {}, {'$C'}, {}, {'$B'}, {'$A'}, {'$D'}
=
$A % trap, $B % petrol, $C % tools, $D % base
$A % mine, $B % the person, $C % equipment, $D % base
$A % pedestrian, $B % the key, $C % the food, $D % building
=
first get $B and $C (avoid $As), and then bring them both to $D
while avoiding $As, bring $B and $C to the $D
first: get $B. second: get $C. third: carry them to the $D. but most most importantly never collide with $As
=
((.)* > $B > (.)* > $C > (.)* > $D | (.)* > $C > (.)* > $B > (.)* > $D) & (!$A)*
((.)* > $B > (.)* > $C > (.)* > $D | (.)* > $C > (.)* > $B > (.)* > $D) & ((.)* > $A > (.)*)~
((!$A)* > $B&!$A > (!$A)* > $C&!$A > (!$A)* > $D&!$A | (!$A)* > $C&!$A > (!$A)* > $B&!$A > (!$A)* > $D&!$A)

0 @ {}, {}, {}
0 @ {}, {}, {}, {'$B'}, {'$B'}, {}, {'$A'}
0 @ {}, {}, {}, {'$C'}, {'$C'}, {}, {'$A'}
1 @ {}, {}, {}, {'$B'}, {'$C'}, {}, {'$A'}
1 @ {}, {}, {}, {'$C'}, {'$B'}, {}, {'$A'}
1 @ {}, {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}
1 @ {}, {}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}
1 @ {}, {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}
1 @ {}, {}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}
=
$A % garage, $B % tools, $C % food
$A % building, $B % coffee, $C % key
$A % base, $B % equipment, $C % petrol
=
before going to the $A, get the $B and the $C in any order
get the $B and the $C to the $A
first get the $B then get the $C, or first get the $C then get the $B, then go to the $A
grab the $B then the $C, or $C then the $B, and go to the $A
once you get the $B and the $C visit the $A
bring $B and $C to the $A in any order
=
(!$C&!$B)* > ($B > (!$C)* > $C | $C > (!$B)* > $B) > (!$B&!$C&!$A)* >$A

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$C'}, {}, {'$D'}, {}, {'$E'}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {}, {}, {}, {'$D'}, {}, {'$E'}, {'$C'}, {}, {'$D'}, {}, {}, {}, {}, {}
1 @ {}, {'$C'}, {}, {'$D'}, {}, {'$E'}, {}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$C'}, {'$D'}, {}, {'$E'}, {}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$C'}, {}, {'$D'}, {}, {'$E'}, {'$A'}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$C'}, {'$D'}, {'$B'}, {'$E'}, {}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$C'}, {}, {'$D'}, {}, {'$E'}, {}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$C'}, {}, {'$D'}, {}, {'$E'}, {}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$C'}, {'$D'}, {}, {'$E'}, {}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$C'}, {}, {'$D'}, {}, {'$E'}, {}, {'$D'}, {}, {}, {}, {}, {}, {}, {}, {}
=
$A % mine, $B % trap, $C % house, $D % apartment, $E % garage
$A % trap, $B % mine, $C % garden, $D % camp, $E % hospital
$A % hole, $B % building, $C % goldmine, $D % mountain, $E % field
=
never step on a $A and avoid the $B, visit the $C then $D then $E. return to $D
go to $C, $D, then $E. finally return to the $D. avoid the $As and $Bs
=
(!$A & !$B & !$C & !$D & !$E)* > $C&!$A&!$B > (!$A&!$B&!$C&!$D&!$E)* > $D&!$A&!$B > (!$A&!$B&!$C&!$D&!$E)* > $E&!$A&!$B > (!$A&!$B&!$C&!$D&!$E)* > $D&!$A&!$B
((!$C&!$D&!$E)* > $C > (!$C&!$D&!$E)* > $D > (!$C&!$D&!$E)* > $E > (!$C&!$D&!$E)* > $D) & (!$A & !$B)*
((!$C&!$D&!$E)* > $C > (!$C&!$D&!$E)* > $D > (!$C&!$D&!$E)* > $E > (!$C&!$D&!$E)* > $D) & (!$A & !$B)+
((!$C&!$D&!$E)* > $C > (!$C&!$D&!$E)* > $D > (!$C&!$D&!$E)* > $E > (!$C&!$D&!$E)* > $D) & ((.)* > ($A | $B) > (.)*)~

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
3 @ {}, {'$A'}, {}, {'$B'}, {}, {}, {'$C'}, {}, {}, {}, {}, {}
1 @ {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}
1 @ {}, {}, {}, {}, {}, {'$C'}, {}, {}, {}, {}, {}, {}
5 @ {'$A'}, {'$A'}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}
6 @ {'$A'}, {'$A'}, {'$A'}, {'$C'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}
=
$A % left, $B % right, $C % down
$A % right, $B % down, $C % up
$A % down, $B % up, $C % left
$A % up, $B % left, $C % jump
=
repeat in any order: $A, $B, $C
Go $A, or $B, or $C and repeat
Repeatedly go $A, $B, or $C
=
((.)* > ($A | $B | $C))+

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
3 @ {}, {'$A'}, {}, {'$B'}, {}, {}, {'$C'}, {}, {}, {}, {}, {}
1 @ {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}
1 @ {}, {}, {}, {}, {}, {'$C'}, {}, {}, {}, {}, {}, {}
5 @ {'$A'}, {'$A'}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}
6 @ {'$A'}, {'$A'}, {'$A'}, {'$C'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}
=
$A % food, $B % mail, $C % garden
$A % key, $B % coffee, $C % house
$A % tool, $B % petrol, $C % base
$A % food, $B % equipment, $C % goldmine
=
get the $A or $B or go to the $C, repeat
This task is simple. Either go to $C, or collect the $A or $B.
You have three options to repeat: go to $C, find $A, or find $B.
=
((.)* > ($A | $B | $C))+

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$B'}, {'$C'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {'$C'}, {}, {'$B'}, {}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$C'}, {'$B'}, {}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
=
$A % PLACE, $B % OBJECT, $C % AVOID 
=
before exiting through the $A, grab the $B! never step on a $C
without stepping on a $C: collect the $B and get to the $A
(in reverse order) get the $B (avoid $Cs) then the $A (also avoid $C)
=
(!$B&!$A&!$C)* > $B&!$C > (!$A&!$C)* > $A&!$C
((!$B&!$A)* > $B > (!$A)* > $A) & (!$C)*

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$B'}, {}, {}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {'$C'}, {}, {'$B'}, {}, {'$A'}, {}, {}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$C'}, {'$B'}, {}, {'$A'}, {}, {}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
=
$A % PLACE, $B % OBJECT, $C % FALL_IN_A
=
before exiting through the $A, grab the $B! never fall into a $C
without falling into a $C: collect the $B and get to the $A
do the following in reverse order: $A then $B. avoid $Cs though!
=
(!$B&!$C&!$A)* > ($B&!$C) > (!$A&!$C)* > ($A&!$C)
((!$B&!$A)* > $B > (!$A)* > $A) & (!$C)*

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$C'}, {}, {'$D'}, {}, {'$A'}, {}, {}, {}, {}
1 @ {}, {'$A'}, {}, {'$C'}, {}, {'$D'}, {}, {'$B'}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$C'}, {}, {'$D'}, {}, {'$C'}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$C'}, {}, {'$D'}, {}, {'$D'}, {}, {}, {}, {}
1 @ {}, {'$A'}, {}, {'$C'}, {}, {'$D'}, {}, {'$B'}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$C'}, {}, {'$D'}, {}, {'$B'}, {}, {}, {}, {}, {}, {'$A'}, {}, {'$C'}, {}, {'$D'}, {}, {'$B'}, {}, {}, {}, {}
1 @ {}, {'$B'}, {}, {'$A'}, {'$C'}, {}, {'$C'}, {'$A'}, {}, {'$D'}, {'$D'}, {'$B'}, {}, {}, {}, {}
=
$A % PLACE, $B % PLACE, $C % OBJECT, $D % OBJECT
=
go to the $A, then collect the $C. afterwards run to get the $D, and finally go to the $B
in this order: $A, $C, $D, $B
in reverse order: $B, $D, $C, $A
You have to do four things. First, go to the $A. Second, get the $C. Third, Go to $B. And finally get $D.
Go to the $A, then find the $C, then go to the $B, then find the $D.
=
(!$A)* > $A > (!$C)* > $C > (!$D)* > $D > (!$B)* > $B

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$B'}, {'$B'}, {'$C', '$B'}
0 @ {}, {'$A'}, {}, {'$B'}, {'$B'}, {'$C', '$B'}, {'$B'}, {'$B'}, {}, {'$B'}, {}, {'$C'}, {}, {}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {'$B'}, {'$C', '$B'}, {'$B'}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {'$B'}, {'$C', '$B'}, {'$B', '$C'}, {'$B', '$C'}, {}, {'$A'}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {'$B'}, {'$C', '$B'}, {'$B', '$C'}, {'$B', '$C'}, {'$C'}, {'$A', '$C'}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$B'}, {'$B'}, {'$C'}, {'$B'}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$B'}, {'$B'}, {'$B'}, {'$B'}, {'$B'}, {}, {'$A'}, {}, {}, {}, {}, {}
=
$A % PLACE, $B % AREA, $C % PLACE
=
start from the $A and find the $B. then find the $C in the $B. return to $A
this task begins and ends in the $A. so, starting from the $A, find the $B. and in the $B, find the $C. don't forget to return to $A
this task begins and ends in the $A. so, starting from the $A, find the $B. and in the $B, find the $C
Find the $A. Then, find the $B in the $C. Finally, return to the $A
=
(!$A)* > $A > (!$B)* > ($B&!$C)* > $B&$C > (!$A)* > $A

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$B'}, {'$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {'$A'}, {'$A', '$B'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {'$B'}, {'$A', '$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {'$B'}, {'$A', '$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {'$B'}, {'$A', '$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {'$B'}, {'$A', '$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
=
$A % PLACE, $B % AREA
=
find the $A in the $B
Enter the $B. In there, find the $A.
Find the $A (it must be in the $B).
Navigate through the $B. In there, find the $A.
=
(!$B)* > ($B)* > $A&$B

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$B'}, {'$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {'$A'}, {'$A', '$B'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {'$B'}, {'$A', '$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$B'}, {'$B'}, {'$A', '$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {'$B'}, {'$A', '$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {'$B'}, {'$A', '$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
=
$A % OBJECT, $B % AREA
=
find the $A in the $B
Enter the $B. In there, find the $A.
Find the $A (it must be in the $B).
Navigate through the $B. In there, find the $A.
=
(!$B)* > ($B)* > $A&$B

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$B'}, {'$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {'$A'}, {'$A', '$B'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$B'}, {'$B'}, {'$A', '$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {'$A'}, {}, {}, {'$A', '$B'}, {'$A'}, {'$C'}, {'$C'}, {'$C', '$B'}, {'$C'}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {'$A'}, {}, {}, {'$A', '$B'}, {'$A'}, {'$C'}, {'$C'}, {'$B'}, {'$C'}, {}, {}, {}, {}, {}, {}
=
$A % PLACE, $B % PLACE, $C % AREA
=
find the $A then find the $B in the $C
Go to the $C and find the $B, but not before finding the $A (doesn't have to be in the $C).
Find the $A wherever. Afterwards, find the $B in the $C.
Find the $A. Then go to $C. And in the $C, find the $B.
=
(!$A)* > $A > (!$C)* > ($C)* > ($B&$C)

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}
0 @ {}, {'$B'}, {}, {'$B'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}
1 @ {}, {'$B'}, {}, {'$B'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
1 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
0 @ {}, {'$B'}, {}, {'$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
=
$A % PLACE, $B % PLACE
$A % OBJECT, $B % PLACE
$A % PLACE, $B % OBJECT
$A % OBJECT, $B % OBJECT
=
Find the $A then find the $B.
Find the $A (and after that find the $B)
Find $B, but before that find the $A.
=
(!$A)* > $A > (!$B)* > $B

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}
0 @ {}, {'$B'}, {}, {'$B'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}
1 @ {}, {'$B'}, {}, {'$B'}, {'$A'}, {'$A', 'collect'}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
1 @ {}, {'$A'}, {'$A', 'collect'}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
1 @ {}, {'$A'}, {'$A', 'collect'}, {}, {'$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
0 @ {}, {'$B'}, {}, {'$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
=
$A % OBJECT, $B % PLACE
=
Find the $A, collect it, then bring it to the $B
Collect $A. Bring it to the $B
Collect the $A. Bring the collected object to the $B
=
(!$A | !collect)* > $A > $A&collect > (!$B)* > $B

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}
0 @ {}, {'$B'}, {}, {'$B'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}
0 @ {}, {'$B'}, {}, {'$B'}, {'$A'}, {'$A', 'collect'}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
0 @ {}, {'$A'}, {'$A', 'collect'}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
0 @ {}, {'$A'}, {'$A', 'collect'}, {}, {'$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
0 @ {}, {'$B'}, {}, {'$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
1 @ {}, {'$B'}, {}, {'$B'}, {'$B', '$A'}, {'$B', '$A', 'collect'}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
1 @ {}, {'$B'}, {'$B'}, {'$B'}, {'$B', '$A'}, {'$B', '$A', 'collect'}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
1 @ {}, {'$B'}, {}, {'$B'}, {'$B', '$A'}, {'$B', '$A', 'collect'}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {}, {'$B'}, {'$B'}, {'$B'}, {'$B', '$A'}, {'$B', '$A', 'collect'}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
1 @ {}, {'$B'}, {'$B'}, {'$B'}, {'$B', '$A'}, {'$B', '$A', 'collect'}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}, {}, {'$B'}, {'$B'}, {'$B'}, {'$B', '$A'}, {'$B', '$A', 'collect'}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
=
$A % OBJECT, $B % AREA
=
find the $A in the $B and collect it
collect the $A from the $B
go to the $B and collect the $A
enter the $B. in there, find and collect the $A
=
(!collect | !$A | !$B)* > ($B)* > ($B&$A) > ($B&$A&collect)

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}
0 @ {}, {'$B'}, {}, {'$B'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$A'}, {}
0 @ {}, {'$B'}, {}, {'$B'}, {'$A'}, {'$A', 'collect'}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
0 @ {}, {'$A'}, {'$A', 'collect'}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
0 @ {}, {'$A'}, {'$A', 'collect'}, {}, {'$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
0 @ {}, {'$B'}, {}, {'$B'}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {'$B'}, {}
1 @ {}, {'$B'}, {}, {'$B'}, {'$B', '$A'}, {'$B', '$A', 'collect'}, {}, {'$C'}, {'$C', 'drop'}, {}, {}, {}, {}, {'$B'}, {}
1 @ {}, {'$B'}, {'$B'}, {'$B'}, {'$B', '$A'}, {'$B', '$A', 'collect'}, {}, {}, {'$C'}, {'$C', 'drop'}, {'$C'}, {}, {}, {'$B'}, {}
=
$A % OBJECT, $B % AREA, $C % PLACE
=
find the $A in the $B, then drop it at $C
pick up the $A from the $B. leave it at $C
go to the $B and pick up the $A to bring it to $C
enter the $B. in there, find the $A. carry it to $C and drop it there
=
(!collect | !$A | !$B)* > ($B)* > ($B&$A) > ($B&$A&collect) > (!$C | !drop)* > $C > $C&drop

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {}, {'$A'}, {'$A'}, {'$A'}, {}, {}, {}, {'$A'}, {'$A'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
8 @ {}, {'$A'}, {'$A'}, {'$A'}, {'$A'}, {'$A'}, {'$A'}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
=
$A % PLACE
$A % AREA
=
find the $A. remain inside the $A
find the $A. then, remain in it
=
(!$A)* > ($A)+

0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {}, {}, {'$A'}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {}, {}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {}, {}, {}, {'$A'}, {}, {'$A'}, {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}
=
$A % PLACE
$A % AREA
=
go the the $A once, and then leave forever
go the the $A, and then leave
find the $A. leave the $A
=
(!$A)* > $A > !$A
