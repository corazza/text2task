0 @ {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$A'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$B'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
0 @ {}, {'$C'}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}
1 @ {'$A'}, {'$B'}, {'$C'}
0 @ {}, {'$A'}, {'$B'}, {'$C'}
1 @ {'$A'}, {'$B'}, {'$C'}, {}
1 @ {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}, {'$A'}, {'$B'}, {'$C'}
0 @ {'$A'}, {'$B'}, {}, {'$C'}
0 @ {'$A'}, {}, {'$B'}, {'$C'}
0 @ {'$A'}, {}, {'$B'}, {}, {'$C'}
=
$A % DIRECTION, $B % DIRECTION, $C % DIRECTION
=
go $A once, then $B once, then $C
go $A, $B, then $C (but only once each time)
go $A, $B, then $C (but only once)
=
$A > $B > $C

1 @ {}
2 @ {}, {}
0 @ {'$A'}, {'$A'}
1 @ {}, {'$A'}
1 @ {}, {'$A'}, {}, {}, {}, {}
=
$A % DIRECTION
=
never go $A
Do anything except go $A
You are free do anything if you never go $A
Do whatever (without going $A)
=
(!$A)*
((.)* > $A > (.)*)~

1 @ {}
2 @ {}, {}
0 @ {'$A'}, {'$A'}
1 @ {}, {'$A'}
1 @ {}, {'$A'}, {}, {}, {}, {}
=
$A % PLACE
=
Never visit the $A
Never go to the $A
You are free to do anything, except visit $A
Do not visit $A
$A: never go there
=
(!$A)*
((.)* > $A > (.)*)~

3 @ {}, {'$A'}, {'$A'}, {'$A', '$B'}, {'$A'}, {'$A'}, {}, {}
3 @ {}, {'$A'}, {'$A'}, {'$A', '$B'}, {'$A'}, {'$A'}
3 @ {}, {'$A'}, {'$A'}, {'$A', '$B'}
5 @ {}, {'$A'}, {}, {'$A'}, {}, {'$A', '$B'}
5 @ {}, {'$A'}, {}, {'$A'}, {}, {'$A', '$B'}, {}
3 @ {}, {'$A'}, {'$A'}, {'$A', '$B'}, {}
1 @ {}, {'$A', '$B'}, {}
0 @ {'$A', '$B'}
0 @ {'$A', '$B'}, {'$A', '$B'}, {'$A', '$B'}, {'$A', '$B'}
4 @ {}, {}, {'$B'}, {'$A'}
5 @ {}, {}, {'$B'}, {'$A'}, {}, {'$A', '$B'}
=
$A % PLACE, $B % jump
$A % PLACE, $B % collect
=
Don't $B while in the $A
never stand around the $A and start $Bing
do not $B in the $A
never $B in the $A
no $Bing allowed in the $A
=
(!$A | $A&!$B)*
((.)* > ($A&$B) > (.)*)~

3 @ {}, {'$A'}, {'$A'}, {'$A', '$B'}, {'$A'}, {'$A'}, {}, {}
3 @ {}, {'$A'}, {'$A'}, {'$A', '$B'}, {'$A'}, {'$A'}
3 @ {}, {'$A'}, {'$A'}, {'$A', '$B'}
5 @ {}, {'$A'}, {}, {'$A'}, {}, {'$A', '$B'}
5 @ {}, {'$A'}, {}, {'$A'}, {}, {'$A', '$B'}, {}
3 @ {}, {'$A'}, {'$A'}, {'$A', '$B'}, {}
1 @ {}, {'$A', '$B'}, {}
0 @ {'$A', '$B'}
0 @ {'$A', '$B'}, {'$A', '$B'}, {'$A', '$B'}, {'$A', '$B'}
4 @ {}, {}, {'$B'}, {'$A'}
5 @ {}, {}, {'$B'}, {'$A'}, {}, {'$A', '$B'}
=
$A % PLACE, $B % drop
=
Don't $B while in the $A
never stand around the $A and start dropping
do not $B in the $A
never $B in the $A
no dropping allowed in the $A
=
(!$A | $A&!$B)*
((.)* > ($A&$B) > (.)*)~

3 @ {}, {'$A'}, {'$A'}, {'$A', '$B'}, {'$A'}, {'$A'}, {}, {}
3 @ {}, {'$A'}, {'$A'}, {'$A', '$B'}, {'$A'}, {'$A'}
3 @ {}, {'$A'}, {'$A'}, {'$A', '$B'}
5 @ {}, {'$A'}, {}, {'$A'}, {}, {'$A', '$B'}
5 @ {}, {'$A'}, {}, {'$A'}, {}, {'$A', '$B'}, {}
3 @ {}, {'$A'}, {'$A'}, {'$A', '$B'}, {}
1 @ {}, {'$A', '$B'}, {}
0 @ {'$A', '$B'}
0 @ {'$A', '$B'}, {'$A', '$B'}, {'$A', '$B'}, {'$A', '$B'}
4 @ {}, {}, {'$B'}, {'$A'}
5 @ {}, {}, {'$B'}, {'$A'}, {}, {'$A', '$B'}
=
$A % PLACE, $B % grab
=
Don't $B while in the $A
never stand around the $A and start grabbing
do not $B in the $A
never $B in the $A
no grabbing allowed in the $A
=
(!$A | $A&!$B)*
((.)* > ($A&$B) > (.)*)~

0 @ {}
0 @ {}, {}, {'$A'}
1 @ {'$A'}
2 @ {'$A'}, {'$A'}
=
$A % DIRECTION
=
Always go $A
You can do anything as long as you keep going $A
(Keep going $A) do whatever
=
($A)+

0 @ {}
1 @ {}, {}, {'$A'}
1 @ {'$A'}
1 @ {'$A'}, {'$A'}
0 @ {}, {}, {}
=
$A % DIRECTION
=
Go $A at least once
Do anything but go $A at least once
Your task is to go $A at least once
=
(!$A)* > $A

0 @ {}
0 @ {}, {}, {'$A'}
1 @ {'$A'}
2 @ {'$A'}, {'$A'}
0 @ {'$B'}
0 @ {}, {'$B'}, {'$A'}
0 @ {'$A', '$B'}
0 @ {'$A', '$B'}, {'$A', '$B'}, {'$A', '$B'}
2 @ {'$A'}, {'$A'}, {'$B', '$A'}, {'$A'}
2 @ {'$A'}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
=
$A % DIRECTION, $B % AVOID
=
Always go $A, but avoid $Bs
You can do anything as long as you keep going $A and avoiding $Bs
(Keep going $A) do whatever but avoid $Bs
=
(($A)+) & (!$B)*
(($A&!$B)+)

0 @ {}
0 @ {}, {}, {'$A'}
1 @ {'$A'}
2 @ {'$A'}, {'$A'}
0 @ {'$B'}
0 @ {}, {'$B'}, {'$A'}
0 @ {'$A', '$B'}
0 @ {'$A', '$B'}, {'$A', '$B'}, {'$A', '$B'}
2 @ {'$A'}, {'$A'}, {'$B', '$A'}, {'$A'}
2 @ {'$A'}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
=
$A % DIRECTION, $B % STEP_ON_A
=
Always go $A, but avoid stepping on $Bs
You can do anything as long as you keep going $A and not stepping on $Bs
(Keep going $A) do whatever but don't step on $Bs
=
(($A)+) & (!$B)*
($A&!$B)+

0 @ {}
0 @ {}, {}, {'$A'}
1 @ {'$A'}
2 @ {'$A'}, {'$A'}
0 @ {'$B'}
0 @ {}, {'$B'}, {'$A'}
0 @ {'$A', '$B'}
0 @ {'$A', '$B'}, {'$A', '$B'}, {'$A', '$B'}
2 @ {'$A'}, {'$A'}, {'$B', '$A'}, {'$A'}
2 @ {'$A'}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
=
$A % DIRECTION, $B % FALL_IN_A
=
Always go $A, but don't fall in a $B
You can do anything as long as you keep going $A and not falling into $Bs
(Keep going $A) do whatever but don't fall in a $B
=
(($A)+) & (!$B)*
($A&!$B)+

0 @ {}, {}
0 @ {}, {}, {'$A'}, {'$B'}, {}
0 @ {}, {}, {'$A'}, {}, {'$B'}, {'$A'}, {'$B'}, {}
0 @ {}, {}, {'$A'}, {'$B'}, {}
1 @ {}, {}, {'$A'}, {}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$B'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}
2 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B'}, {'$B', '$A'}, 
2 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
2 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$B', '$A'}
=
$A % AREA, $B % COLLECTABLE
=
Go to the $A and gather $Bs
We need $Bs from the $A
Once you get to the $A gather $Bs
Find $Bs in the $A
=
(.)* > (($A)* > $B&$A)+
(.)* > ($A)* > $B&$A > (($A)* > $B&$A)*

0 @ {}, {}
0 @ {}, {}, {'$A'}, {'$B'}, {}
0 @ {}, {}, {'$A'}, {}, {'$B'}, {'$A'}, {'$B'}, {}
0 @ {}, {}, {'$A'}, {'$B'}, {}
1 @ {}, {}, {'$A'}, {}, {'$B', '$A'}
0 @ {}, {}, {'$A'}, {'$B'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}
1 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B'}, {'$B', '$A'}, 
2 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$B', '$A'}
2 @ {}, {}, {'$A'}, {'$A'}, {'$B', '$A'}, {'$A'}, {'$B', '$A'}
=
$A % AREA, $B % COLLECTABLE
=
Go to the $A and find $Bs, without leaving the $A.
Go to the $A and avoid any $Bs on the way there. In the $A, find $Bs.
There are many $Bs in the $A. Go and find them, but on the way to the $A avoid the $Bs.
=
(!$B)* > (($A)* > $B&$A)+

0 @ {}, {}, {}, {}
1 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$A'}
1 @ {}, {'$C', '$B'}, {}, {'$B', '$C'}, {}, {'$A'}
0 @ {}, {'$C', '$B'}, {}, {'$B', '$C'}, {}, {'$B'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$C'}, {}, {'$B'}, {}, {'$A'}
=
$A % PLACE, $B % OBJECT, $C % OBJECT
=
Grab the $B and the $C and bring them to the $A.
Bring $C and $B to the $A.
Go to the $A, but don't forget the $C and $B
get some $B! get the $C! bring them to the $A
would you please bring $B and the $C to the $A?
=
((.)* > $B > (.)* > $C | (.)* > $C > (.)* > $B) > (.)* > $A

0 @ {}, {}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}
0 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}
0 @ {}, {'$C'}, {}, {'$A'}, {}, {'$B'}
0 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}
=
$A % PLACE, $B % PLACE, $C % PLACE
=
Visit the $A, $B, and $C in that order
First go to the $A. Then go to the $B. Finally, go to the $C.
Visit in order: $A, $B, $C
Go to the $A, then the $B, then the $C
=
(!$A&!$B&!$C)* > $A > (!$A&!$B&!$C)* > $B > (!$A&!$B&!$C)* > $C
(!$A&!$B&!$C)+ > $A > (!$A&!$B&!$C)+ > $B > (!$A&!$B&!$C)+ > $C

0 @ {}, {}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}
0 @ {}, {'$A'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}
0 @ {}, {'$A'}, {}, {'$A'}, {}, {'$B'}, {}, {'$B'}, {}, {'$C'}
0 @ {}, {'$A'}, {}, {'$A'}, {}, {'$B'}, {}, {'$B'}, {}, {'$C'}, {}, {'$C'}, {}
1 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}
1 @ {}, {'$C'}, {}, {'$A'}, {}, {'$B'}
1 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}
=
$A % PLACE, $B % PLACE, $C % PLACE
=
Visit the $A, the $B, and the $C. Start from any of them, but respect that order. Never visit the same place twice.
=
(!$A&!$B&!$C)* > $A > (!$A&!$B&!$C)* > $B > (!$A&!$B&!$C)* > $C | (!$A&!$B&!$C)* > $B > (!$A&!$B&!$C)* > $C > (!$A&!$B&!$C)* > $A | (!$A&!$B&!$C)* > $C > (!$A&!$B&!$C)* > $A > (!$A&!$B&!$C)* > $B

0 @ {}, {}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}
1 @ {}, {'$A'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}
1 @ {}, {'$A'}, {}, {'$A'}, {}, {'$B'}, {}, {'$B'}, {}, {'$C'}
1 @ {}, {'$A'}, {}, {'$A'}, {}, {'$B'}, {}, {'$B'}, {}, {'$C'}, {}, {'$C'}, {}
1 @ {}, {'$A'}, {'$A'}, {'$A'}, {}, {'$B'}, {}, {'$B'}, {}, {'$C'}, {}, {'$C'}, {}
1 @ {}, {'$A'}, {'$A'}, {'$A'}, {}, {'$B'}, {'$B'}, {'$B'}, {}, {'$C'}, {}, {'$C'}, {}
1 @ {}, {'$A'}, {'$A'}, {'$A'}, {}, {'$B'}, {'$B'}, {'$B'}, {}, {'$C'}, {'$C'}, {'$C'}, {}
1 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}
1 @ {}, {'$C'}, {}, {'$A'}, {}, {'$B'}
1 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}
=
$A % PLACE, $B % PLACE, $C % PLACE
=
Visit the $A, the $B, and the $C. Start from any of them, but respect that order.
Visit the $A, the $B, and the $C. Start from any of them, but respect that order. You can visit the same place twice.
Visit the $A, the $B, and the $C. You can repeat visits. Start from any of them, but respect that order.
=
(!$B&!$C)* > $A > (!$A&!$C)* > $B > (!$A&!$B&!$C)* > $C | (!$A&!$C)* > ($B)+ > (!$A&!$B)* > ($C)+ > (!$A&!$B&!$C)* > ($A)+ | (!$A&!$B)* > $C > (!$B&!$C)* > $A > (!$A&!$B&!$C)* > ($B)+

0 @ {}, {}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}
0 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}
0 @ {}, {'$C'}, {}, {'$A'}, {}, {'$B'}
2 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {}
0 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {}
0 @ {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {}
0 @ {}, {}, {}
1 @ {'$A'}, {'$B'}, {'$C'}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}
2 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}
3 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}
1 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}
0 @ {'$B'}, {'$A'}, {'$A'}
0 @ {'$A'}, {'$C'}, {'$B'}
0 @ {}, {'$B'}, {}, {'$A'}, {}, {'$A'}, {}
0 @ {}, {'$A'}, {}, {'$C'}, {}, {'$B'}, {}
=
$A % PLACE, $B % PLACE, $C % PLACE
=
Patrol the $A, $B, and $C in that order (start at the $A)
Circulate the $A, $B, and $C in that order (start at the $A)
Starting at the $A, circulate the $A, the $B, and the $C
First go to the $A, then to the $B, and finally to the $C. Repeat
go to the $A then the $B then the $C and go back to the $A, repeat
Repeat the following: visit the $A, then go to the $B, then visit the $C
patrol around the $A, $B, and $C
=
((!$B&!$C)* > $A > (!$A&!$C)* > $B > (!$A&!$B)* > $C)+

0 @ {}, {}, {}
0 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}
1 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}
0 @ {}, {'$C'}, {}, {'$A'}, {}, {'$B'}
0 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {}
2 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {}
0 @ {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {}
=
$A % PLACE, $B % PLACE, $C % PLACE
=
Patrol the $A, $B, and $C in that order (start at the $B)
Starting at the $B, circulate the $A, the $B, and the $C
Circulate the $A, $B, and $C in that order (start at the $B)
=
((!$A&!$C)* > $B > (!$A&!$B)* > $C > (!$C&!$B)* > $A)+

0 @ {}, {}, {}
0 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}
0 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}
1 @ {}, {'$C'}, {}, {'$A'}, {}, {'$B'}
0 @ {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {}
0 @ {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {}
2 @ {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {'$C'}, {}, {'$A'}, {}, {'$B'}, {}, {}
=
$A % PLACE, $B % PLACE, $C % PLACE
=
Patrol the $A, $B, and $C in that order (start at the $C)
Starting at the $C, circulate the $A, the $B, and the $C
Circulate the $A, $B, and $C in that order (start at the $C)
=
((!$A&!$B)* > $C > (!$C&!$B)* > $A > (!$C&!$A)* > $B)+

0 @ {}, {}, {}, {}
1 @ {}, {'$B'}, {}, {'$C'}, {}, {'$D'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$D'}
1 @ {}, {'$C', '$B'}, {}, {'$B', '$C'}, {}, {'$D'}
0 @ {}, {'$C', '$B'}, {}, {'$B', '$C'}, {}, {'$B'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$C'}, {}, {'$B'}, {}, {'$D'}
0 @ {}, {'$B'}, {'$A'}, {'$C'}, {}, {'$D'}
0 @ {'$A'}, {'$C'}, {}, {'$B'}, {}, {'$D'}
0 @ {}, {'$C', '$B'}, {}, {'$B', '$A', '$C'}, {}, {'$D'}
0 @ {}, {'$C'}, {}, {'$B'}, {}, {'$C'}, {}, {'$B'}, {'$A'}, {'$D'}
=
$A % HIT_A, $B % OBJECT, $C % OBJECT, $D % PLACE
=
never hit a $A. get the $B and the $C in any order to the $D
before going to the $D, get the $B and the $C in any order, but beware not to hit a $A
=
((.)* > $B > (.)* > $C > (.)* > $D | (.)* > $C > (.)* > $B > (.)* > $D) & (!$A)*
((.)* > $B > (.)* > $C > (.)* > $D | (.)* > $C > (.)* > $B > (.)* > $D) & ((.)* > $A > (.)*)~
((!$A)* > $B&!$A > (!$A)* > $C&!$A > (!$A)* > $D&!$A | (!$A)* > $C&!$A > (!$A)* > $B&!$A > (!$A)* > $D&!$A)

0 @ {}, {}, {}, {}
1 @ {}, {'$B'}, {}, {'$C'}, {}, {'$D'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$D'}
1 @ {}, {'$C', '$B'}, {}, {'$B', '$C'}, {}, {'$D'}
0 @ {}, {'$C', '$B'}, {}, {'$B', '$C'}, {}, {'$B'}
1 @ {}, {'$C'}, {}, {'$B'}, {}, {'$C'}, {}, {'$B'}, {}, {'$D'}
0 @ {}, {'$B'}, {'$A'}, {'$C'}, {}, {'$D'}
0 @ {'$A'}, {'$C'}, {}, {'$B'}, {}, {'$D'}
0 @ {}, {'$C', '$B'}, {}, {'$B', '$A', '$C'}, {}, {'$D'}
0 @ {}, {'$C'}, {}, {'$B'}, {}, {'$C'}, {}, {'$B'}, {'$A'}, {'$D'}
=
$A % AVOID, $B % NO_THE, $C % NO_THE, $D % PLACE
=
first get $B and $C (avoid $As), and then bring them both to the $D
while avoiding $As, bring $B and $C to the $D
first: get $B. second: get $C. third: carry them to the $D. but most most importantly never collide with $As
=
((.)* > $B > (.)* > $C > (.)* > $D | (.)* > $C > (.)* > $B > (.)* > $D) & (!$A)*
((.)* > $B > (.)* > $C > (.)* > $D | (.)* > $C > (.)* > $B > (.)* > $D) & ((.)* > $A > (.)*)~
((!$A)* > $B&!$A > (!$A)* > $C&!$A > (!$A)* > $D&!$A | (!$A)* > $C&!$A > (!$A)* > $B&!$A > (!$A)* > $D&!$A)
